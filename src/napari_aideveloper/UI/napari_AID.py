# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'napari_AID.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(509, 714)
        Form.setMaximumSize(QtCore.QSize(1200, 16777215))
        self.gridLayout_9 = QtWidgets.QGridLayout(Form)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.tabWidget_2 = QtWidgets.QTabWidget(Form)
        self.tabWidget_2.setMinimumSize(QtCore.QSize(300, 0))
        self.tabWidget_2.setMaximumSize(QtCore.QSize(1000, 16777215))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        self.tabWidget_2.setPalette(palette)
        self.tabWidget_2.setUsesScrollButtons(False)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_build = QtWidgets.QWidget()
        self.tab_build.setObjectName("tab_build")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab_build)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.scrollArea = QtWidgets.QScrollArea(self.tab_build)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setLineWidth(0)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 462, 933))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_2)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.splitter_3 = QtWidgets.QSplitter(self.scrollAreaWidgetContents_2)
        self.splitter_3.setOrientation(QtCore.Qt.Vertical)
        self.splitter_3.setChildrenCollapsible(False)
        self.splitter_3.setObjectName("splitter_3")
        self.groupBox_files = QtWidgets.QGroupBox(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_files.sizePolicy().hasHeightForWidth())
        self.groupBox_files.setSizePolicy(sizePolicy)
        self.groupBox_files.setMaximumSize(QtCore.QSize(16777215, 200))
        self.groupBox_files.setFlat(False)
        self.groupBox_files.setObjectName("groupBox_files")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_files)
        self.gridLayout_3.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.table_dragdrop = MyTable(self.groupBox_files)
        self.table_dragdrop.setObjectName("table_dragdrop")
        self.table_dragdrop.setColumnCount(11)
        self.table_dragdrop.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_dragdrop.setHorizontalHeaderItem(10, item)
        self.table_dragdrop.horizontalHeader().setVisible(True)
        self.table_dragdrop.horizontalHeader().setCascadingSectionResizes(False)
        self.table_dragdrop.horizontalHeader().setDefaultSectionSize(38)
        self.table_dragdrop.horizontalHeader().setMinimumSectionSize(20)
        self.gridLayout_3.addWidget(self.table_dragdrop, 0, 0, 1, 1)
        self.groupBox_data_overview = QtWidgets.QGroupBox(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_data_overview.sizePolicy().hasHeightForWidth())
        self.groupBox_data_overview.setSizePolicy(sizePolicy)
        self.groupBox_data_overview.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.groupBox_data_overview.setCheckable(True)
        self.groupBox_data_overview.setObjectName("groupBox_data_overview")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox_data_overview)
        self.gridLayout_7.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.tableWidget_Info = QtWidgets.QTableWidget(self.groupBox_data_overview)
        self.tableWidget_Info.setObjectName("tableWidget_Info")
        self.tableWidget_Info.setColumnCount(0)
        self.tableWidget_Info.setRowCount(0)
        self.gridLayout_7.addWidget(self.tableWidget_Info, 0, 0, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_define = QtWidgets.QWidget()
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        self.tab_define.setPalette(palette)
        self.tab_define.setObjectName("tab_define")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_define)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.tab_define)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 415, 520))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.pushButton_modelname = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_modelname.sizePolicy().hasHeightForWidth())
        self.pushButton_modelname.setSizePolicy(sizePolicy)
        self.pushButton_modelname.setMaximumSize(QtCore.QSize(113, 16777215))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/icon/model_path.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_modelname.setIcon(icon)
        self.pushButton_modelname.setObjectName("pushButton_modelname")
        self.gridLayout_5.addWidget(self.pushButton_modelname, 2, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.radioButton_NewModel = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_NewModel.sizePolicy().hasHeightForWidth())
        self.radioButton_NewModel.setSizePolicy(sizePolicy)
        self.radioButton_NewModel.setMinimumSize(QtCore.QSize(0, 0))
        self.radioButton_NewModel.setMaximumSize(QtCore.QSize(75, 16777215))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/icon/new.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.radioButton_NewModel.setIcon(icon1)
        self.radioButton_NewModel.setIconSize(QtCore.QSize(20, 20))
        self.radioButton_NewModel.setChecked(True)
        self.radioButton_NewModel.setObjectName("radioButton_NewModel")
        self.verticalLayout.addWidget(self.radioButton_NewModel)
        self.radioButton_LoadRestartModel = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_LoadRestartModel.sizePolicy().hasHeightForWidth())
        self.radioButton_LoadRestartModel.setSizePolicy(sizePolicy)
        self.radioButton_LoadRestartModel.setMaximumSize(QtCore.QSize(160, 16777215))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icon/icon/restart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.radioButton_LoadRestartModel.setIcon(icon2)
        self.radioButton_LoadRestartModel.setIconSize(QtCore.QSize(20, 20))
        self.radioButton_LoadRestartModel.setObjectName("radioButton_LoadRestartModel")
        self.verticalLayout.addWidget(self.radioButton_LoadRestartModel)
        self.radioButton_LoadContinueModel = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_LoadContinueModel.sizePolicy().hasHeightForWidth())
        self.radioButton_LoadContinueModel.setSizePolicy(sizePolicy)
        self.radioButton_LoadContinueModel.setMaximumSize(QtCore.QSize(160, 16777215))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icon/icon/load.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.radioButton_LoadContinueModel.setIcon(icon3)
        self.radioButton_LoadContinueModel.setIconSize(QtCore.QSize(20, 20))
        self.radioButton_LoadContinueModel.setObjectName("radioButton_LoadContinueModel")
        self.verticalLayout.addWidget(self.radioButton_LoadContinueModel)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.comboBox_ModelSelection = QtWidgets.QComboBox(self.scrollAreaWidgetContents)
        self.comboBox_ModelSelection.setStyleSheet("QComboBox {combobox-popup: 0;}")
        self.comboBox_ModelSelection.setMaxVisibleItems(20)
        self.comboBox_ModelSelection.setObjectName("comboBox_ModelSelection")
        self.verticalLayout_2.addWidget(self.comboBox_ModelSelection)
        self.lineEdit_LoadModelPath = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_LoadModelPath.sizePolicy().hasHeightForWidth())
        self.lineEdit_LoadModelPath.setSizePolicy(sizePolicy)
        self.lineEdit_LoadModelPath.setMinimumSize(QtCore.QSize(0, 48))
        self.lineEdit_LoadModelPath.setObjectName("lineEdit_LoadModelPath")
        self.verticalLayout_2.addWidget(self.lineEdit_LoadModelPath)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.gridLayout_5.addLayout(self.horizontalLayout, 0, 0, 1, 3)
        self.groupBox_image_processing = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_image_processing.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.groupBox_image_processing.setObjectName("groupBox_image_processing")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_image_processing)
        self.gridLayout.setObjectName("gridLayout")
        self.label_normalization = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_normalization.sizePolicy().hasHeightForWidth())
        self.label_normalization.setSizePolicy(sizePolicy)
        self.label_normalization.setMinimumSize(QtCore.QSize(103, 0))
        self.label_normalization.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_normalization.setAlignment(QtCore.Qt.AlignCenter)
        self.label_normalization.setObjectName("label_normalization")
        self.gridLayout.addWidget(self.label_normalization, 1, 1, 1, 1)
        self.label_icon_normlization = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_icon_normlization.sizePolicy().hasHeightForWidth())
        self.label_icon_normlization.setSizePolicy(sizePolicy)
        self.label_icon_normlization.setMinimumSize(QtCore.QSize(21, 21))
        self.label_icon_normlization.setMaximumSize(QtCore.QSize(21, 21))
        self.label_icon_normlization.setText("")
        self.label_icon_normlization.setPixmap(QtGui.QPixmap(":/icon/icon/normalization.png"))
        self.label_icon_normlization.setScaledContents(True)
        self.label_icon_normlization.setAlignment(QtCore.Qt.AlignCenter)
        self.label_icon_normlization.setObjectName("label_icon_normlization")
        self.gridLayout.addWidget(self.label_icon_normlization, 1, 0, 1, 1)
        self.spinBox_imagecrop = MySpinBox(self.groupBox_image_processing)
        self.spinBox_imagecrop.setMaximumSize(QtCore.QSize(300, 16777215))
        self.spinBox_imagecrop.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.spinBox_imagecrop.setProperty("value", 32)
        self.spinBox_imagecrop.setObjectName("spinBox_imagecrop")
        self.gridLayout.addWidget(self.spinBox_imagecrop, 0, 2, 1, 1)
        self.label_icon_crop = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_icon_crop.sizePolicy().hasHeightForWidth())
        self.label_icon_crop.setSizePolicy(sizePolicy)
        self.label_icon_crop.setMinimumSize(QtCore.QSize(20, 20))
        self.label_icon_crop.setMaximumSize(QtCore.QSize(20, 20))
        self.label_icon_crop.setText("")
        self.label_icon_crop.setPixmap(QtGui.QPixmap(":/icon/icon/crop.png"))
        self.label_icon_crop.setScaledContents(True)
        self.label_icon_crop.setAlignment(QtCore.Qt.AlignCenter)
        self.label_icon_crop.setObjectName("label_icon_crop")
        self.gridLayout.addWidget(self.label_icon_crop, 0, 0, 1, 1)
        self.label_crop = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_crop.sizePolicy().hasHeightForWidth())
        self.label_crop.setSizePolicy(sizePolicy)
        self.label_crop.setMinimumSize(QtCore.QSize(103, 0))
        self.label_crop.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_crop.setAlignment(QtCore.Qt.AlignCenter)
        self.label_crop.setObjectName("label_crop")
        self.gridLayout.addWidget(self.label_crop, 0, 1, 1, 1)
        self.comboBox_Normalization = QtWidgets.QComboBox(self.groupBox_image_processing)
        self.comboBox_Normalization.setMaximumSize(QtCore.QSize(300, 16777215))
        self.comboBox_Normalization.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToMinimumContentsLength)
        self.comboBox_Normalization.setObjectName("comboBox_Normalization")
        self.comboBox_Normalization.addItem("")
        self.comboBox_Normalization.addItem("")
        self.comboBox_Normalization.addItem("")
        self.comboBox_Normalization.addItem("")
        self.gridLayout.addWidget(self.comboBox_Normalization, 1, 2, 1, 1)
        self.label_icon_padding = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_icon_padding.sizePolicy().hasHeightForWidth())
        self.label_icon_padding.setSizePolicy(sizePolicy)
        self.label_icon_padding.setMinimumSize(QtCore.QSize(21, 21))
        self.label_icon_padding.setMaximumSize(QtCore.QSize(21, 21))
        self.label_icon_padding.setText("")
        self.label_icon_padding.setPixmap(QtGui.QPixmap(":/icon/icon/padding.png"))
        self.label_icon_padding.setScaledContents(True)
        self.label_icon_padding.setAlignment(QtCore.Qt.AlignCenter)
        self.label_icon_padding.setObjectName("label_icon_padding")
        self.gridLayout.addWidget(self.label_icon_padding, 2, 0, 1, 1)
        self.comboBox_zoomOrder = QtWidgets.QComboBox(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_zoomOrder.sizePolicy().hasHeightForWidth())
        self.comboBox_zoomOrder.setSizePolicy(sizePolicy)
        self.comboBox_zoomOrder.setMaximumSize(QtCore.QSize(300, 16777215))
        self.comboBox_zoomOrder.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToMinimumContentsLength)
        self.comboBox_zoomOrder.setObjectName("comboBox_zoomOrder")
        self.comboBox_zoomOrder.addItem("")
        self.comboBox_zoomOrder.addItem("")
        self.comboBox_zoomOrder.addItem("")
        self.comboBox_zoomOrder.addItem("")
        self.comboBox_zoomOrder.addItem("")
        self.gridLayout.addWidget(self.comboBox_zoomOrder, 4, 2, 1, 1)
        self.label_zoom = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_zoom.sizePolicy().hasHeightForWidth())
        self.label_zoom.setSizePolicy(sizePolicy)
        self.label_zoom.setMinimumSize(QtCore.QSize(103, 0))
        self.label_zoom.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_zoom.setAlignment(QtCore.Qt.AlignCenter)
        self.label_zoom.setObjectName("label_zoom")
        self.gridLayout.addWidget(self.label_zoom, 4, 1, 1, 1)
        self.label_color = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_color.sizePolicy().hasHeightForWidth())
        self.label_color.setSizePolicy(sizePolicy)
        self.label_color.setMinimumSize(QtCore.QSize(103, 0))
        self.label_color.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_color.setAlignment(QtCore.Qt.AlignCenter)
        self.label_color.setObjectName("label_color")
        self.gridLayout.addWidget(self.label_color, 3, 1, 1, 1)
        self.label_icon_zoom = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_icon_zoom.sizePolicy().hasHeightForWidth())
        self.label_icon_zoom.setSizePolicy(sizePolicy)
        self.label_icon_zoom.setMinimumSize(QtCore.QSize(21, 21))
        self.label_icon_zoom.setMaximumSize(QtCore.QSize(21, 21))
        self.label_icon_zoom.setText("")
        self.label_icon_zoom.setPixmap(QtGui.QPixmap(":/icon/icon/zoom.png"))
        self.label_icon_zoom.setScaledContents(True)
        self.label_icon_zoom.setAlignment(QtCore.Qt.AlignCenter)
        self.label_icon_zoom.setObjectName("label_icon_zoom")
        self.gridLayout.addWidget(self.label_icon_zoom, 4, 0, 1, 1)
        self.label_icon_color = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_icon_color.sizePolicy().hasHeightForWidth())
        self.label_icon_color.setSizePolicy(sizePolicy)
        self.label_icon_color.setMinimumSize(QtCore.QSize(21, 21))
        self.label_icon_color.setMaximumSize(QtCore.QSize(21, 21))
        self.label_icon_color.setText("")
        self.label_icon_color.setPixmap(QtGui.QPixmap(":/icon/icon/color.png"))
        self.label_icon_color.setScaledContents(True)
        self.label_icon_color.setAlignment(QtCore.Qt.AlignCenter)
        self.label_icon_color.setObjectName("label_icon_color")
        self.gridLayout.addWidget(self.label_icon_color, 3, 0, 1, 1)
        self.comboBox_GrayOrRGB = QtWidgets.QComboBox(self.groupBox_image_processing)
        self.comboBox_GrayOrRGB.setMaximumSize(QtCore.QSize(300, 16777215))
        self.comboBox_GrayOrRGB.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToMinimumContentsLength)
        self.comboBox_GrayOrRGB.setObjectName("comboBox_GrayOrRGB")
        self.comboBox_GrayOrRGB.addItem("")
        self.comboBox_GrayOrRGB.addItem("")
        self.gridLayout.addWidget(self.comboBox_GrayOrRGB, 3, 2, 1, 1)
        self.comboBox_paddingMode = QtWidgets.QComboBox(self.groupBox_image_processing)
        self.comboBox_paddingMode.setMaximumSize(QtCore.QSize(300, 16777215))
        self.comboBox_paddingMode.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToMinimumContentsLength)
        self.comboBox_paddingMode.setObjectName("comboBox_paddingMode")
        self.comboBox_paddingMode.addItem("")
        self.comboBox_paddingMode.addItem("")
        self.comboBox_paddingMode.addItem("")
        self.comboBox_paddingMode.addItem("")
        self.comboBox_paddingMode.addItem("")
        self.comboBox_paddingMode.addItem("")
        self.comboBox_paddingMode.addItem("")
        self.gridLayout.addWidget(self.comboBox_paddingMode, 2, 2, 1, 1)
        self.label_padding = QtWidgets.QLabel(self.groupBox_image_processing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_padding.sizePolicy().hasHeightForWidth())
        self.label_padding.setSizePolicy(sizePolicy)
        self.label_padding.setMinimumSize(QtCore.QSize(103, 0))
        self.label_padding.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_padding.setAlignment(QtCore.Qt.AlignCenter)
        self.label_padding.setObjectName("label_padding")
        self.gridLayout.addWidget(self.label_padding, 2, 1, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_image_processing, 3, 0, 1, 3)
        self.groupBox_training = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_training.setObjectName("groupBox_training")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_training)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.splitter_7 = QtWidgets.QSplitter(self.groupBox_training)
        self.splitter_7.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_7.setObjectName("splitter_7")
        self.label_icon_epochs = QtWidgets.QLabel(self.splitter_7)
        self.label_icon_epochs.setMinimumSize(QtCore.QSize(20, 20))
        self.label_icon_epochs.setMaximumSize(QtCore.QSize(20, 20))
        self.label_icon_epochs.setText("")
        self.label_icon_epochs.setPixmap(QtGui.QPixmap(":/icon/icon/nr_epochs.png"))
        self.label_icon_epochs.setScaledContents(True)
        self.label_icon_epochs.setObjectName("label_icon_epochs")
        self.label_nr_epochs = QtWidgets.QLabel(self.splitter_7)
        self.label_nr_epochs.setMaximumSize(QtCore.QSize(75, 16777215))
        self.label_nr_epochs.setObjectName("label_nr_epochs")
        self.spinBox_NrEpochs = MySpinBox(self.splitter_7)
        self.spinBox_NrEpochs.setMinimumSize(QtCore.QSize(0, 24))
        self.spinBox_NrEpochs.setMaximum(9999)
        self.spinBox_NrEpochs.setProperty("value", 2500)
        self.spinBox_NrEpochs.setObjectName("spinBox_NrEpochs")
        self.gridLayout_6.addWidget(self.splitter_7, 0, 0, 1, 2)
        self.line_2 = QtWidgets.QFrame(self.groupBox_training)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_6.addWidget(self.line_2, 1, 0, 1, 2)
        self.radioButton_cpu = QtWidgets.QRadioButton(self.groupBox_training)
        self.radioButton_cpu.setMaximumSize(QtCore.QSize(50, 16777215))
        self.radioButton_cpu.setIconSize(QtCore.QSize(20, 20))
        self.radioButton_cpu.setChecked(True)
        self.radioButton_cpu.setObjectName("radioButton_cpu")
        self.gridLayout_6.addWidget(self.radioButton_cpu, 2, 0, 1, 1)
        self.comboBox_cpu = QtWidgets.QComboBox(self.groupBox_training)
        self.comboBox_cpu.setToolTip("")
        self.comboBox_cpu.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToMinimumContentsLength)
        self.comboBox_cpu.setObjectName("comboBox_cpu")
        self.comboBox_cpu.addItem("")
        self.gridLayout_6.addWidget(self.comboBox_cpu, 2, 1, 1, 1)
        self.radioButton_gpu = QtWidgets.QRadioButton(self.groupBox_training)
        self.radioButton_gpu.setEnabled(True)
        self.radioButton_gpu.setMaximumSize(QtCore.QSize(50, 16777215))
        self.radioButton_gpu.setIconSize(QtCore.QSize(20, 20))
        self.radioButton_gpu.setObjectName("radioButton_gpu")
        self.gridLayout_6.addWidget(self.radioButton_gpu, 3, 0, 1, 1)
        self.comboBox_gpu = QtWidgets.QComboBox(self.groupBox_training)
        self.comboBox_gpu.setEnabled(False)
        self.comboBox_gpu.setObjectName("comboBox_gpu")
        self.comboBox_gpu.addItem("")
        self.gridLayout_6.addWidget(self.comboBox_gpu, 3, 1, 1, 1)
        self.splitter_6 = QtWidgets.QSplitter(self.groupBox_training)
        self.splitter_6.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_6.setObjectName("splitter_6")
        self.label_memory = QtWidgets.QLabel(self.splitter_6)
        self.label_memory.setEnabled(False)
        self.label_memory.setMaximumSize(QtCore.QSize(60, 16777215))
        self.label_memory.setAlignment(QtCore.Qt.AlignCenter)
        self.label_memory.setObjectName("label_memory")
        self.doubleSpinBox_memory = MyDoubleSpinBox(self.splitter_6)
        self.doubleSpinBox_memory.setEnabled(False)
        self.doubleSpinBox_memory.setMinimumSize(QtCore.QSize(0, 24))
        self.doubleSpinBox_memory.setMaximum(1.0)
        self.doubleSpinBox_memory.setSingleStep(0.01)
        self.doubleSpinBox_memory.setProperty("value", 0.7)
        self.doubleSpinBox_memory.setObjectName("doubleSpinBox_memory")
        self.gridLayout_6.addWidget(self.splitter_6, 4, 0, 1, 2)
        self.gridLayout_5.addWidget(self.groupBox_training, 4, 0, 1, 3)
        self.lineEdit_modelname = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_modelname.setMinimumSize(QtCore.QSize(0, 24))
        self.lineEdit_modelname.setObjectName("lineEdit_modelname")
        self.gridLayout_5.addWidget(self.lineEdit_modelname, 2, 1, 1, 1)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_2.addWidget(self.scrollArea_2, 4, 0, 1, 1)
        self.tabWidget.addTab(self.tab_define, "")
        self.tab_brightn = QtWidgets.QWidget()
        self.tab_brightn.setObjectName("tab_brightn")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.tab_brightn)
        self.gridLayout_17.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.groupBox_example = QtWidgets.QGroupBox(self.tab_brightn)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_example.sizePolicy().hasHeightForWidth())
        self.groupBox_example.setSizePolicy(sizePolicy)
        self.groupBox_example.setMaximumSize(QtCore.QSize(16777215, 200))
        self.groupBox_example.setFlat(False)
        self.groupBox_example.setObjectName("groupBox_example")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox_example)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.comboBox_example_train = QtWidgets.QComboBox(self.groupBox_example)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_example_train.sizePolicy().hasHeightForWidth())
        self.comboBox_example_train.setSizePolicy(sizePolicy)
        self.comboBox_example_train.setStyleSheet("QComboBox {combobox-popup: 0;}\n"
"QComboBox:drop-down {width:20px; }")
        self.comboBox_example_train.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToMinimumContentsLength)
        self.comboBox_example_train.setMinimumContentsLength(6)
        self.comboBox_example_train.setObjectName("comboBox_example_train")
        self.comboBox_example_train.addItem("")
        self.comboBox_example_train.addItem("")
        self.gridLayout_4.addWidget(self.comboBox_example_train, 0, 0, 1, 1)
        self.comboBox_example_aug = QtWidgets.QComboBox(self.groupBox_example)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_example_aug.sizePolicy().hasHeightForWidth())
        self.comboBox_example_aug.setSizePolicy(sizePolicy)
        self.comboBox_example_aug.setStyleSheet("QComboBox {combobox-popup: 0;}\n"
"QComboBox:drop-down {width:20px;}")
        self.comboBox_example_aug.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToMinimumContentsLength)
        self.comboBox_example_aug.setMinimumContentsLength(6)
        self.comboBox_example_aug.setObjectName("comboBox_example_aug")
        self.comboBox_example_aug.addItem("")
        self.comboBox_example_aug.addItem("")
        self.gridLayout_4.addWidget(self.comboBox_example_aug, 0, 1, 1, 1)
        self.label_class = QtWidgets.QLabel(self.groupBox_example)
        self.label_class.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_class.setObjectName("label_class")
        self.gridLayout_4.addWidget(self.label_class, 0, 2, 1, 1)
        self.comboBox_ShowIndex = QtWidgets.QComboBox(self.groupBox_example)
        self.comboBox_ShowIndex.setMaximumSize(QtCore.QSize(70, 16777215))
        self.comboBox_ShowIndex.setStyleSheet("QComboBox {combobox-popup: 0;}\n"
"QComboBox:drop-down {width:20px; }                             \n"
"                                    \n"
"                                    ")
        self.comboBox_ShowIndex.setObjectName("comboBox_ShowIndex")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.comboBox_ShowIndex.addItem("")
        self.gridLayout_4.addWidget(self.comboBox_ShowIndex, 0, 3, 1, 1)
        self.btn_show = QtWidgets.QPushButton(self.groupBox_example)
        self.btn_show.setObjectName("btn_show")
        self.gridLayout_4.addWidget(self.btn_show, 0, 4, 1, 1)
        self.gridLayout_17.addWidget(self.groupBox_example, 0, 0, 1, 1)
        self.groupBox_options = QtWidgets.QGroupBox(self.tab_brightn)
        self.groupBox_options.setObjectName("groupBox_options")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.groupBox_options)
        self.gridLayout_11.setContentsMargins(0, 12, 0, 0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.scrollArea_4 = QtWidgets.QScrollArea(self.groupBox_options)
        self.scrollArea_4.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.scrollArea_4.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.scrollArea_4.setWidgetResizable(True)
        self.scrollArea_4.setObjectName("scrollArea_4")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 409, 802))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_4)
        self.gridLayout_18.setContentsMargins(-1, 6, -1, 6)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.label_brightn_refresh = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_brightn_refresh.sizePolicy().hasHeightForWidth())
        self.label_brightn_refresh.setSizePolicy(sizePolicy)
        self.label_brightn_refresh.setObjectName("label_brightn_refresh")
        self.gridLayout_18.addWidget(self.label_brightn_refresh, 0, 0, 1, 1)
        self.spinBox_RefreshAfterEpochs = QtWidgets.QSpinBox(self.scrollAreaWidgetContents_4)
        self.spinBox_RefreshAfterEpochs.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.spinBox_RefreshAfterEpochs.setProperty("value", 2)
        self.spinBox_RefreshAfterEpochs.setObjectName("spinBox_RefreshAfterEpochs")
        self.gridLayout_18.addWidget(self.spinBox_RefreshAfterEpochs, 0, 1, 1, 1)
        self.groupBox_aug_option_2 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_4)
        self.groupBox_aug_option_2.setObjectName("groupBox_aug_option_2")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.groupBox_aug_option_2)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.checkBox_HorizFlip = QtWidgets.QCheckBox(self.groupBox_aug_option_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_HorizFlip.sizePolicy().hasHeightForWidth())
        self.checkBox_HorizFlip.setSizePolicy(sizePolicy)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icon/icon/flip_h.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_HorizFlip.setIcon(icon4)
        self.checkBox_HorizFlip.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_HorizFlip.setObjectName("checkBox_HorizFlip")
        self.gridLayout_12.addWidget(self.checkBox_HorizFlip, 0, 0, 1, 1)
        self.checkBox_shear_2 = QtWidgets.QCheckBox(self.groupBox_aug_option_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_shear_2.sizePolicy().hasHeightForWidth())
        self.checkBox_shear_2.setSizePolicy(sizePolicy)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icon/icon/shear.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_shear_2.setIcon(icon5)
        self.checkBox_shear_2.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_shear_2.setChecked(True)
        self.checkBox_shear_2.setObjectName("checkBox_shear_2")
        self.gridLayout_12.addWidget(self.checkBox_shear_2, 5, 0, 1, 1)
        self.checkBox_rotation = QtWidgets.QCheckBox(self.groupBox_aug_option_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_rotation.sizePolicy().hasHeightForWidth())
        self.checkBox_rotation.setSizePolicy(sizePolicy)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icon/icon/rotate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_rotation.setIcon(icon6)
        self.checkBox_rotation.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_rotation.setChecked(True)
        self.checkBox_rotation.setObjectName("checkBox_rotation")
        self.gridLayout_12.addWidget(self.checkBox_rotation, 1, 0, 1, 1)
        self.checkBox_height_shift = QtWidgets.QCheckBox(self.groupBox_aug_option_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_height_shift.sizePolicy().hasHeightForWidth())
        self.checkBox_height_shift.setSizePolicy(sizePolicy)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icon/icon/shift_h.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_height_shift.setIcon(icon7)
        self.checkBox_height_shift.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_height_shift.setChecked(True)
        self.checkBox_height_shift.setObjectName("checkBox_height_shift")
        self.gridLayout_12.addWidget(self.checkBox_height_shift, 3, 0, 1, 1)
        self.checkBox_VertFlip = QtWidgets.QCheckBox(self.groupBox_aug_option_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_VertFlip.sizePolicy().hasHeightForWidth())
        self.checkBox_VertFlip.setSizePolicy(sizePolicy)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icon/icon/flip_v.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_VertFlip.setIcon(icon8)
        self.checkBox_VertFlip.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_VertFlip.setChecked(True)
        self.checkBox_VertFlip.setObjectName("checkBox_VertFlip")
        self.gridLayout_12.addWidget(self.checkBox_VertFlip, 0, 1, 1, 1)
        self.checkBox_width_shift_2 = QtWidgets.QCheckBox(self.groupBox_aug_option_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_width_shift_2.sizePolicy().hasHeightForWidth())
        self.checkBox_width_shift_2.setSizePolicy(sizePolicy)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icon/icon/shift_w.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_width_shift_2.setIcon(icon9)
        self.checkBox_width_shift_2.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_width_shift_2.setChecked(True)
        self.checkBox_width_shift_2.setObjectName("checkBox_width_shift_2")
        self.gridLayout_12.addWidget(self.checkBox_width_shift_2, 2, 0, 1, 1)
        self.checkBox_zoom = QtWidgets.QCheckBox(self.groupBox_aug_option_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_zoom.sizePolicy().hasHeightForWidth())
        self.checkBox_zoom.setSizePolicy(sizePolicy)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icon/icon/zoom.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_zoom.setIcon(icon10)
        self.checkBox_zoom.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_zoom.setChecked(True)
        self.checkBox_zoom.setObjectName("checkBox_zoom")
        self.gridLayout_12.addWidget(self.checkBox_zoom, 4, 0, 1, 1)
        self.lineEdit_Rotation = QtWidgets.QLineEdit(self.groupBox_aug_option_2)
        self.lineEdit_Rotation.setObjectName("lineEdit_Rotation")
        self.gridLayout_12.addWidget(self.lineEdit_Rotation, 1, 1, 1, 1)
        self.lineEdit_widthShift = QtWidgets.QLineEdit(self.groupBox_aug_option_2)
        self.lineEdit_widthShift.setObjectName("lineEdit_widthShift")
        self.gridLayout_12.addWidget(self.lineEdit_widthShift, 2, 1, 1, 1)
        self.lineEdit_heightShift = QtWidgets.QLineEdit(self.groupBox_aug_option_2)
        self.lineEdit_heightShift.setObjectName("lineEdit_heightShift")
        self.gridLayout_12.addWidget(self.lineEdit_heightShift, 3, 1, 1, 1)
        self.lineEdit_zoomRange = QtWidgets.QLineEdit(self.groupBox_aug_option_2)
        self.lineEdit_zoomRange.setObjectName("lineEdit_zoomRange")
        self.gridLayout_12.addWidget(self.lineEdit_zoomRange, 4, 1, 1, 1)
        self.lineEdit_shearRange = QtWidgets.QLineEdit(self.groupBox_aug_option_2)
        self.lineEdit_shearRange.setObjectName("lineEdit_shearRange")
        self.gridLayout_12.addWidget(self.lineEdit_shearRange, 5, 1, 1, 1)
        self.gridLayout_18.addWidget(self.groupBox_aug_option_2, 1, 0, 1, 2)
        self.groupBox_brightness = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_4)
        self.groupBox_brightness.setObjectName("groupBox_brightness")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.groupBox_brightness)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.checkBox_add = QtWidgets.QCheckBox(self.groupBox_brightness)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_add.sizePolicy().hasHeightForWidth())
        self.checkBox_add.setSizePolicy(sizePolicy)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icon/icon/add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_add.setIcon(icon11)
        self.checkBox_add.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_add.setChecked(True)
        self.checkBox_add.setObjectName("checkBox_add")
        self.gridLayout_13.addWidget(self.checkBox_add, 0, 0, 1, 1)
        self.spinBox_PlusLower = QtWidgets.QSpinBox(self.groupBox_brightness)
        self.spinBox_PlusLower.setMinimum(-255)
        self.spinBox_PlusLower.setMaximum(255)
        self.spinBox_PlusLower.setProperty("value", -15)
        self.spinBox_PlusLower.setObjectName("spinBox_PlusLower")
        self.gridLayout_13.addWidget(self.spinBox_PlusLower, 0, 1, 1, 1)
        self.spinBox_PlusUpper = QtWidgets.QSpinBox(self.groupBox_brightness)
        self.spinBox_PlusUpper.setMinimum(-255)
        self.spinBox_PlusUpper.setMaximum(255)
        self.spinBox_PlusUpper.setProperty("value", 15)
        self.spinBox_PlusUpper.setObjectName("spinBox_PlusUpper")
        self.gridLayout_13.addWidget(self.spinBox_PlusUpper, 0, 2, 1, 1)
        self.checkBox_mult = QtWidgets.QCheckBox(self.groupBox_brightness)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_mult.sizePolicy().hasHeightForWidth())
        self.checkBox_mult.setSizePolicy(sizePolicy)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icon/icon/multi.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_mult.setIcon(icon12)
        self.checkBox_mult.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_mult.setChecked(True)
        self.checkBox_mult.setObjectName("checkBox_mult")
        self.gridLayout_13.addWidget(self.checkBox_mult, 1, 0, 1, 1)
        self.doubleSpinBox_MultLower = QtWidgets.QDoubleSpinBox(self.groupBox_brightness)
        self.doubleSpinBox_MultLower.setProperty("value", 0.7)
        self.doubleSpinBox_MultLower.setObjectName("doubleSpinBox_MultLower")
        self.gridLayout_13.addWidget(self.doubleSpinBox_MultLower, 1, 1, 1, 1)
        self.doubleSpinBox_MultUpper = QtWidgets.QDoubleSpinBox(self.groupBox_brightness)
        self.doubleSpinBox_MultUpper.setProperty("value", 1.3)
        self.doubleSpinBox_MultUpper.setObjectName("doubleSpinBox_MultUpper")
        self.gridLayout_13.addWidget(self.doubleSpinBox_MultUpper, 1, 2, 1, 1)
        self.gridLayout_18.addWidget(self.groupBox_brightness, 2, 0, 1, 2)
        self.groupBox_gaussian = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_4)
        self.groupBox_gaussian.setObjectName("groupBox_gaussian")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.groupBox_gaussian)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.checkBox_gauss_mean = QtWidgets.QCheckBox(self.groupBox_gaussian)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_gauss_mean.sizePolicy().hasHeightForWidth())
        self.checkBox_gauss_mean.setSizePolicy(sizePolicy)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icon/icon/gaussian_noise_mean.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_gauss_mean.setIcon(icon13)
        self.checkBox_gauss_mean.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_gauss_mean.setChecked(True)
        self.checkBox_gauss_mean.setObjectName("checkBox_gauss_mean")
        self.gridLayout_14.addWidget(self.checkBox_gauss_mean, 0, 0, 1, 1)
        self.doubleSpinBox_GaussianNoiseMean = QtWidgets.QDoubleSpinBox(self.groupBox_gaussian)
        self.doubleSpinBox_GaussianNoiseMean.setObjectName("doubleSpinBox_GaussianNoiseMean")
        self.gridLayout_14.addWidget(self.doubleSpinBox_GaussianNoiseMean, 0, 1, 1, 1)
        self.checkBox_gauss_scale = QtWidgets.QCheckBox(self.groupBox_gaussian)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_gauss_scale.sizePolicy().hasHeightForWidth())
        self.checkBox_gauss_scale.setSizePolicy(sizePolicy)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icon/icon/gaussian_noise_scale.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_gauss_scale.setIcon(icon14)
        self.checkBox_gauss_scale.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_gauss_scale.setChecked(True)
        self.checkBox_gauss_scale.setObjectName("checkBox_gauss_scale")
        self.gridLayout_14.addWidget(self.checkBox_gauss_scale, 1, 0, 1, 1)
        self.doubleSpinBox_GaussianNoiseScale = QtWidgets.QDoubleSpinBox(self.groupBox_gaussian)
        self.doubleSpinBox_GaussianNoiseScale.setProperty("value", 3.0)
        self.doubleSpinBox_GaussianNoiseScale.setObjectName("doubleSpinBox_GaussianNoiseScale")
        self.gridLayout_14.addWidget(self.doubleSpinBox_GaussianNoiseScale, 1, 1, 1, 1)
        self.gridLayout_18.addWidget(self.groupBox_gaussian, 3, 0, 1, 2)
        self.groupBox_color = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_4)
        self.groupBox_color.setObjectName("groupBox_color")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.groupBox_color)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.checkBox_contrast = QtWidgets.QCheckBox(self.groupBox_color)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_contrast.sizePolicy().hasHeightForWidth())
        self.checkBox_contrast.setSizePolicy(sizePolicy)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icon/icon/contrast.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_contrast.setIcon(icon15)
        self.checkBox_contrast.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_contrast.setChecked(True)
        self.checkBox_contrast.setObjectName("checkBox_contrast")
        self.gridLayout_15.addWidget(self.checkBox_contrast, 0, 0, 1, 1)
        self.doubleSpinBox_contrastLower = QtWidgets.QDoubleSpinBox(self.groupBox_color)
        self.doubleSpinBox_contrastLower.setSingleStep(0.1)
        self.doubleSpinBox_contrastLower.setProperty("value", 0.7)
        self.doubleSpinBox_contrastLower.setObjectName("doubleSpinBox_contrastLower")
        self.gridLayout_15.addWidget(self.doubleSpinBox_contrastLower, 0, 1, 1, 1)
        self.doubleSpinBox_contrastHigher = QtWidgets.QDoubleSpinBox(self.groupBox_color)
        self.doubleSpinBox_contrastHigher.setMaximum(100.0)
        self.doubleSpinBox_contrastHigher.setSingleStep(0.1)
        self.doubleSpinBox_contrastHigher.setProperty("value", 1.3)
        self.doubleSpinBox_contrastHigher.setObjectName("doubleSpinBox_contrastHigher")
        self.gridLayout_15.addWidget(self.doubleSpinBox_contrastHigher, 0, 2, 1, 1)
        self.checkBox_saturation = QtWidgets.QCheckBox(self.groupBox_color)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_saturation.sizePolicy().hasHeightForWidth())
        self.checkBox_saturation.setSizePolicy(sizePolicy)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icon/icon/saturation.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_saturation.setIcon(icon16)
        self.checkBox_saturation.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_saturation.setObjectName("checkBox_saturation")
        self.gridLayout_15.addWidget(self.checkBox_saturation, 1, 0, 1, 1)
        self.doubleSpinBox_saturationLower = QtWidgets.QDoubleSpinBox(self.groupBox_color)
        self.doubleSpinBox_saturationLower.setObjectName("doubleSpinBox_saturationLower")
        self.gridLayout_15.addWidget(self.doubleSpinBox_saturationLower, 1, 1, 1, 1)
        self.doubleSpinBox_saturationHigher = QtWidgets.QDoubleSpinBox(self.groupBox_color)
        self.doubleSpinBox_saturationHigher.setObjectName("doubleSpinBox_saturationHigher")
        self.gridLayout_15.addWidget(self.doubleSpinBox_saturationHigher, 1, 2, 1, 1)
        self.checkBox_hue = QtWidgets.QCheckBox(self.groupBox_color)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_hue.sizePolicy().hasHeightForWidth())
        self.checkBox_hue.setSizePolicy(sizePolicy)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icon/icon/Hue.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_hue.setIcon(icon17)
        self.checkBox_hue.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_hue.setObjectName("checkBox_hue")
        self.gridLayout_15.addWidget(self.checkBox_hue, 2, 0, 1, 1)
        self.doubleSpinBox_hueDelta = QtWidgets.QDoubleSpinBox(self.groupBox_color)
        self.doubleSpinBox_hueDelta.setObjectName("doubleSpinBox_hueDelta")
        self.gridLayout_15.addWidget(self.doubleSpinBox_hueDelta, 2, 1, 1, 1)
        self.gridLayout_18.addWidget(self.groupBox_color, 4, 0, 1, 2)
        self.groupBox_blurring = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_4)
        self.groupBox_blurring.setObjectName("groupBox_blurring")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.groupBox_blurring)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.label_min = QtWidgets.QLabel(self.groupBox_blurring)
        self.label_min.setAlignment(QtCore.Qt.AlignCenter)
        self.label_min.setObjectName("label_min")
        self.gridLayout_16.addWidget(self.label_min, 0, 1, 1, 1)
        self.label_max = QtWidgets.QLabel(self.groupBox_blurring)
        self.label_max.setAlignment(QtCore.Qt.AlignCenter)
        self.label_max.setObjectName("label_max")
        self.gridLayout_16.addWidget(self.label_max, 0, 2, 1, 1)
        self.checkBox_avgBlur = QtWidgets.QCheckBox(self.groupBox_blurring)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_avgBlur.sizePolicy().hasHeightForWidth())
        self.checkBox_avgBlur.setSizePolicy(sizePolicy)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icon/icon/average_blur.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_avgBlur.setIcon(icon18)
        self.checkBox_avgBlur.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_avgBlur.setChecked(True)
        self.checkBox_avgBlur.setObjectName("checkBox_avgBlur")
        self.gridLayout_16.addWidget(self.checkBox_avgBlur, 1, 0, 1, 1)
        self.spinBox_avgBlurMin = QtWidgets.QSpinBox(self.groupBox_blurring)
        self.spinBox_avgBlurMin.setMaximum(1000)
        self.spinBox_avgBlurMin.setObjectName("spinBox_avgBlurMin")
        self.gridLayout_16.addWidget(self.spinBox_avgBlurMin, 1, 1, 1, 1)
        self.spinBox_avgBlurMax = QtWidgets.QSpinBox(self.groupBox_blurring)
        self.spinBox_avgBlurMax.setMaximum(1000)
        self.spinBox_avgBlurMax.setProperty("value", 5)
        self.spinBox_avgBlurMax.setObjectName("spinBox_avgBlurMax")
        self.gridLayout_16.addWidget(self.spinBox_avgBlurMax, 1, 2, 1, 1)
        self.checkBox_gaussBlur = QtWidgets.QCheckBox(self.groupBox_blurring)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_gaussBlur.sizePolicy().hasHeightForWidth())
        self.checkBox_gaussBlur.setSizePolicy(sizePolicy)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icon/icon/gauss.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_gaussBlur.setIcon(icon19)
        self.checkBox_gaussBlur.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_gaussBlur.setObjectName("checkBox_gaussBlur")
        self.gridLayout_16.addWidget(self.checkBox_gaussBlur, 2, 0, 1, 1)
        self.spinBox_gaussBlurMin = QtWidgets.QSpinBox(self.groupBox_blurring)
        self.spinBox_gaussBlurMin.setMaximum(1000)
        self.spinBox_gaussBlurMin.setObjectName("spinBox_gaussBlurMin")
        self.gridLayout_16.addWidget(self.spinBox_gaussBlurMin, 2, 1, 1, 1)
        self.spinBox_gaussBlurMax = QtWidgets.QSpinBox(self.groupBox_blurring)
        self.spinBox_gaussBlurMax.setMaximum(1000)
        self.spinBox_gaussBlurMax.setProperty("value", 5)
        self.spinBox_gaussBlurMax.setObjectName("spinBox_gaussBlurMax")
        self.gridLayout_16.addWidget(self.spinBox_gaussBlurMax, 2, 2, 1, 1)
        self.label_kernel = QtWidgets.QLabel(self.groupBox_blurring)
        self.label_kernel.setAlignment(QtCore.Qt.AlignCenter)
        self.label_kernel.setObjectName("label_kernel")
        self.gridLayout_16.addWidget(self.label_kernel, 3, 1, 1, 1)
        self.label_angle = QtWidgets.QLabel(self.groupBox_blurring)
        self.label_angle.setAlignment(QtCore.Qt.AlignCenter)
        self.label_angle.setObjectName("label_angle")
        self.gridLayout_16.addWidget(self.label_angle, 3, 2, 1, 1)
        self.checkBox_motionBlur = QtWidgets.QCheckBox(self.groupBox_blurring)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_motionBlur.sizePolicy().hasHeightForWidth())
        self.checkBox_motionBlur.setSizePolicy(sizePolicy)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icon/icon/motion.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkBox_motionBlur.setIcon(icon20)
        self.checkBox_motionBlur.setIconSize(QtCore.QSize(20, 20))
        self.checkBox_motionBlur.setObjectName("checkBox_motionBlur")
        self.gridLayout_16.addWidget(self.checkBox_motionBlur, 4, 0, 1, 1)
        self.lineEdit_motionBlurKernel = QtWidgets.QLineEdit(self.groupBox_blurring)
        self.lineEdit_motionBlurKernel.setObjectName("lineEdit_motionBlurKernel")
        self.gridLayout_16.addWidget(self.lineEdit_motionBlurKernel, 4, 1, 1, 1)
        self.lineEdit_motionBlurAngle = QtWidgets.QLineEdit(self.groupBox_blurring)
        self.lineEdit_motionBlurAngle.setObjectName("lineEdit_motionBlurAngle")
        self.gridLayout_16.addWidget(self.lineEdit_motionBlurAngle, 4, 2, 1, 1)
        self.gridLayout_18.addWidget(self.groupBox_blurring, 5, 0, 1, 2)
        self.scrollArea_4.setWidget(self.scrollAreaWidgetContents_4)
        self.gridLayout_11.addWidget(self.scrollArea_4, 0, 0, 1, 1)
        self.gridLayout_17.addWidget(self.groupBox_options, 1, 0, 1, 1)
        self.tabWidget.addTab(self.tab_brightn, "")
        self.groupBox_Finalize = QtWidgets.QGroupBox(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_Finalize.sizePolicy().hasHeightForWidth())
        self.groupBox_Finalize.setSizePolicy(sizePolicy)
        self.groupBox_Finalize.setMaximumSize(QtCore.QSize(16777215, 200))
        self.groupBox_Finalize.setObjectName("groupBox_Finalize")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.groupBox_Finalize)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.textBrowser_Info = QtWidgets.QTextBrowser(self.groupBox_Finalize)
        self.textBrowser_Info.setMinimumSize(QtCore.QSize(0, 0))
        self.textBrowser_Info.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.textBrowser_Info.setObjectName("textBrowser_Info")
        self.horizontalLayout_3.addWidget(self.textBrowser_Info)
        self.verticalLayout_FitPlot = QtWidgets.QVBoxLayout()
        self.verticalLayout_FitPlot.setObjectName("verticalLayout_FitPlot")
        self.pushButton_FitModel = QtWidgets.QPushButton(self.groupBox_Finalize)
        self.pushButton_FitModel.setMinimumSize(QtCore.QSize(111, 60))
        self.pushButton_FitModel.setMaximumSize(QtCore.QSize(111, 60))
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icon/icon/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_FitModel.setIcon(icon21)
        self.pushButton_FitModel.setObjectName("pushButton_FitModel")
        self.verticalLayout_FitPlot.addWidget(self.pushButton_FitModel)
        self.horizontalLayout_3.addLayout(self.verticalLayout_FitPlot)
        self.gridLayout_19.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.splitter_3, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents_2)
        self.gridLayout_8.addWidget(self.scrollArea, 0, 0, 1, 1)
        self.tabWidget_2.addTab(self.tab_build, "")
        self.tab_history = QtWidgets.QWidget()
        self.tab_history.setObjectName("tab_history")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.tab_history)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.pushButton_Live = QtWidgets.QPushButton(self.tab_history)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Live.sizePolicy().hasHeightForWidth())
        self.pushButton_Live.setSizePolicy(sizePolicy)
        self.pushButton_Live.setMinimumSize(QtCore.QSize(0, 28))
        self.pushButton_Live.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_Live.setObjectName("pushButton_Live")
        self.gridLayout_20.addWidget(self.pushButton_Live, 0, 0, 1, 1)
        self.pushButton_LoadHistory = QtWidgets.QPushButton(self.tab_history)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_LoadHistory.sizePolicy().hasHeightForWidth())
        self.pushButton_LoadHistory.setSizePolicy(sizePolicy)
        self.pushButton_LoadHistory.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_LoadHistory.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_LoadHistory.setObjectName("pushButton_LoadHistory")
        self.gridLayout_20.addWidget(self.pushButton_LoadHistory, 0, 1, 1, 2)
        self.pushButton_UpdateHistoryPlot = QtWidgets.QPushButton(self.tab_history)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_UpdateHistoryPlot.sizePolicy().hasHeightForWidth())
        self.pushButton_UpdateHistoryPlot.setSizePolicy(sizePolicy)
        self.pushButton_UpdateHistoryPlot.setMinimumSize(QtCore.QSize(0, 60))
        self.pushButton_UpdateHistoryPlot.setObjectName("pushButton_UpdateHistoryPlot")
        self.gridLayout_20.addWidget(self.pushButton_UpdateHistoryPlot, 1, 0, 2, 2)
        self.checkBox_rollingMedian = QtWidgets.QCheckBox(self.tab_history)
        self.checkBox_rollingMedian.setEnabled(True)
        self.checkBox_rollingMedian.setObjectName("checkBox_rollingMedian")
        self.gridLayout_20.addWidget(self.checkBox_rollingMedian, 1, 2, 1, 2)
        self.horizontalSlider_rollmedi = QtWidgets.QSlider(self.tab_history)
        self.horizontalSlider_rollmedi.setEnabled(True)
        self.horizontalSlider_rollmedi.setMinimumSize(QtCore.QSize(0, 0))
        self.horizontalSlider_rollmedi.setMaximumSize(QtCore.QSize(16777215, 19))
        self.horizontalSlider_rollmedi.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_rollmedi.setObjectName("horizontalSlider_rollmedi")
        self.gridLayout_20.addWidget(self.horizontalSlider_rollmedi, 1, 4, 1, 2)
        self.checkBox_linearFit = QtWidgets.QCheckBox(self.tab_history)
        self.checkBox_linearFit.setObjectName("checkBox_linearFit")
        self.gridLayout_20.addWidget(self.checkBox_linearFit, 2, 2, 1, 1)
        self.tableWidget_HistoryItems = QtWidgets.QTableWidget(self.tab_history)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_HistoryItems.sizePolicy().hasHeightForWidth())
        self.tableWidget_HistoryItems.setSizePolicy(sizePolicy)
        self.tableWidget_HistoryItems.setMinimumSize(QtCore.QSize(0, 100))
        self.tableWidget_HistoryItems.setMaximumSize(QtCore.QSize(16777215, 100))
        self.tableWidget_HistoryItems.setObjectName("tableWidget_HistoryItems")
        self.tableWidget_HistoryItems.setColumnCount(0)
        self.tableWidget_HistoryItems.setRowCount(0)
        self.gridLayout_20.addWidget(self.tableWidget_HistoryItems, 3, 0, 1, 6)
        self.widget = QtWidgets.QWidget(self.tab_history)
        self.widget.setObjectName("widget")
        self.gridLayout_20.addWidget(self.widget, 4, 0, 1, 6)
        self.label_loadAndConvertModel = QtWidgets.QLabel(self.tab_history)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_loadAndConvertModel.sizePolicy().hasHeightForWidth())
        self.label_loadAndConvertModel.setSizePolicy(sizePolicy)
        self.label_loadAndConvertModel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_loadAndConvertModel.setObjectName("label_loadAndConvertModel")
        self.gridLayout_20.addWidget(self.label_loadAndConvertModel, 5, 0, 1, 3)
        self.pushButton_loadModel = QtWidgets.QPushButton(self.tab_history)
        self.pushButton_loadModel.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_loadModel.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pushButton_loadModel.setObjectName("pushButton_loadModel")
        self.gridLayout_20.addWidget(self.pushButton_loadModel, 5, 5, 1, 1)
        self.textBrowser_SelectedModelInfo = QtWidgets.QTextBrowser(self.tab_history)
        self.textBrowser_SelectedModelInfo.setMinimumSize(QtCore.QSize(0, 61))
        self.textBrowser_SelectedModelInfo.setMaximumSize(QtCore.QSize(16777215, 61))
        self.textBrowser_SelectedModelInfo.setObjectName("textBrowser_SelectedModelInfo")
        self.gridLayout_20.addWidget(self.textBrowser_SelectedModelInfo, 6, 0, 1, 6)
        self.comboBox_convertTo = QtWidgets.QComboBox(self.tab_history)
        self.comboBox_convertTo.setEnabled(True)
        self.comboBox_convertTo.setObjectName("comboBox_convertTo")
        self.gridLayout_20.addWidget(self.comboBox_convertTo, 7, 0, 1, 3)
        self.pushButton_convertModel = QtWidgets.QPushButton(self.tab_history)
        self.pushButton_convertModel.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_convertModel.sizePolicy().hasHeightForWidth())
        self.pushButton_convertModel.setSizePolicy(sizePolicy)
        self.pushButton_convertModel.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pushButton_convertModel.setObjectName("pushButton_convertModel")
        self.gridLayout_20.addWidget(self.pushButton_convertModel, 7, 5, 1, 1)
        self.lineEdit_LoadHistory = QtWidgets.QLineEdit(self.tab_history)
        self.lineEdit_LoadHistory.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_LoadHistory.sizePolicy().hasHeightForWidth())
        self.lineEdit_LoadHistory.setSizePolicy(sizePolicy)
        self.lineEdit_LoadHistory.setObjectName("lineEdit_LoadHistory")
        self.gridLayout_20.addWidget(self.lineEdit_LoadHistory, 0, 3, 1, 3)
        self.tabWidget_2.addTab(self.tab_history, "")
        self.gridLayout_9.addWidget(self.tabWidget_2, 0, 0, 1, 1)

        self.retranslateUi(Form)
        self.tabWidget_2.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.radioButton_NewModel.toggled['bool'].connect(self.comboBox_ModelSelection.setEnabled) # type: ignore
        self.radioButton_LoadRestartModel.toggled['bool'].connect(self.lineEdit_LoadModelPath.setEnabled) # type: ignore
        self.radioButton_LoadContinueModel.toggled['bool'].connect(self.lineEdit_LoadModelPath.setEnabled) # type: ignore
        self.radioButton_gpu.toggled['bool'].connect(self.comboBox_gpu.setEnabled) # type: ignore
        self.checkBox_rotation.toggled['bool'].connect(self.lineEdit_Rotation.setEnabled) # type: ignore
        self.checkBox_width_shift_2.toggled['bool'].connect(self.lineEdit_widthShift.setEnabled) # type: ignore
        self.checkBox_height_shift.toggled['bool'].connect(self.lineEdit_heightShift.setEnabled) # type: ignore
        self.checkBox_zoom.toggled['bool'].connect(self.lineEdit_zoomRange.setEnabled) # type: ignore
        self.checkBox_shear_2.toggled['bool'].connect(self.lineEdit_shearRange.setEnabled) # type: ignore
        self.checkBox_add.toggled['bool'].connect(self.spinBox_PlusLower.setEnabled) # type: ignore
        self.checkBox_add.toggled['bool'].connect(self.spinBox_PlusUpper.setEnabled) # type: ignore
        self.checkBox_mult.toggled['bool'].connect(self.doubleSpinBox_MultLower.setEnabled) # type: ignore
        self.checkBox_mult.toggled['bool'].connect(self.doubleSpinBox_MultUpper.setEnabled) # type: ignore
        self.checkBox_gauss_mean.toggled['bool'].connect(self.doubleSpinBox_GaussianNoiseMean.setEnabled) # type: ignore
        self.checkBox_gauss_scale.toggled['bool'].connect(self.doubleSpinBox_GaussianNoiseScale.setEnabled) # type: ignore
        self.radioButton_cpu.toggled['bool'].connect(self.comboBox_cpu.setEnabled) # type: ignore
        self.checkBox_rollingMedian.clicked['bool'].connect(self.horizontalSlider_rollmedi.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.groupBox_files.setTitle(_translate("Form", "Drag and drop data (.rtdc) here"))
        self.table_dragdrop.setToolTip(_translate("Form", "<html><head/><body><p>Valid .rtdc files have to contain at least \'images\', \'pos_x\' and \'pos_y\'. <br/>After dropping data, you can specify the ‘Class’ of the images and if it should be used for training (T) or validation (V).<br/>Double-click on the filename to show a random image of the data set. The original and cropped (using \'Input image size\') image is shown.<br/>Click on the button \'Plot\' to open a popup where you can get a histogram or scatterplot of enclosed data.<br/>\'Cells/Epoch\' defines the nr. of images that are used in each epoch for training. Random images are drawn in each epoch during training. For the validation set, images are drawn once at the beginning and kept constant.<br/>Deactivate \'Shuffle\' if you don\'t want to use random data. Then all images of this file are used.<br/>Zoom allows you to increase or decrease resolution. Zoom=1 does nothing; Zoom=2 zooms in; Zoom=0.5 zooms out. This is useful if you have data acquired at 40x but you want to use it to train a model for 20x data. Use \'Options\'-&gt;\'Zooming order\' to define the method used for zooming.<br/>Hint for RT-DC users: Use ShapeOut to gate for particular subpopulations and save the filtered data as .rtdc. Make sure to export at least \'images\', \'pos_x\' and \'pos_y\'.</p></body></html>"))
        item = self.table_dragdrop.horizontalHeaderItem(0)
        item.setText(_translate("Form", "File"))
        item = self.table_dragdrop.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Class"))
        item = self.table_dragdrop.horizontalHeaderItem(2)
        item.setText(_translate("Form", "T"))
        item = self.table_dragdrop.horizontalHeaderItem(3)
        item.setText(_translate("Form", "V"))
        item = self.table_dragdrop.horizontalHeaderItem(4)
        item.setText(_translate("Form", "Show"))
        item = self.table_dragdrop.horizontalHeaderItem(5)
        item.setText(_translate("Form", "Events"))
        item = self.table_dragdrop.horizontalHeaderItem(6)
        item.setText(_translate("Form", "Ev./Ep."))
        item = self.table_dragdrop.horizontalHeaderItem(7)
        item.setText(_translate("Form", "PIX"))
        item = self.table_dragdrop.horizontalHeaderItem(8)
        item.setText(_translate("Form", "Shuffle"))
        item = self.table_dragdrop.horizontalHeaderItem(9)
        item.setText(_translate("Form", "Zoom"))
        item = self.table_dragdrop.horizontalHeaderItem(10)
        item.setText(_translate("Form", "Xtra_In"))
        self.groupBox_data_overview.setTitle(_translate("Form", "Data Overview"))
        self.tableWidget_Info.setToolTip(_translate("Form", "<html><head/><body><p>Specify validation data via \'Build\'-tab or load .rtdc file (-&gt;From .rtdc).<br/>Use column \'Name\' to specify proper cell names (for presentation purposes).<br/>Use column \'Clr\' to specify the plotting color of that class.</p></body></html>"))
        self.pushButton_modelname.setToolTip(_translate("Form", "Define path and filename for the model you want to fit"))
        self.pushButton_modelname.setText(_translate("Form", "Model path"))
        self.radioButton_NewModel.setToolTip(_translate("Form", "Select a model architecture in the dropdown menu"))
        self.radioButton_NewModel.setText(_translate("Form", "New"))
        self.radioButton_LoadRestartModel.setToolTip(_translate("Form", "Load an existing model and only use the architecture and restart fitting"))
        self.radioButton_LoadRestartModel.setText(_translate("Form", "Load and restart"))
        self.radioButton_LoadContinueModel.setToolTip(_translate("Form", "Load an existing model (FULL.h5) and continue fitting"))
        self.radioButton_LoadContinueModel.setText(_translate("Form", "Load and continue"))
        self.comboBox_ModelSelection.setToolTip(_translate("Form", "<html><head/><body><p>Select the model architecture. MLP means Multilayer perceptron. Currently only MLPs are fast enough for AI based sorting. The definition of the architectures can be found in the model_zoo.py. If you want to implement custom Neural net architectures, you can edit model_zoo.py accordingly. </p></body></html>"))
        self.lineEdit_LoadModelPath.setToolTip(_translate("Form", "<html><head/><body><p>When you use \'Load and restart\' or \'Load and continue\', the filename of the chosen model will apprear here.</p></body></html>"))
        self.groupBox_image_processing.setTitle(_translate("Form", "Image processing"))
        self.label_normalization.setToolTip(_translate("Form", "Image normalization method. Default is \'Div. by 255\'. Other normalization methods may not be supported by the Sorting Software"))
        self.label_normalization.setText(_translate("Form", "Normalization"))
        self.label_icon_normlization.setToolTip(_translate("Form", "Image normalization method. Default is \'Div. by 255\'. Other normalization methods may not be supported by the Sorting Software"))
        self.label_icon_crop.setToolTip(_translate("Form", "Models need a defined input size image. Choose wisely since large cells should not be cut."))
        self.label_crop.setToolTip(_translate("Form", "Models need a defined input size image. Choose wisely since large cells should not be cut."))
        self.label_crop.setText(_translate("Form", "Input image crop"))
        self.comboBox_Normalization.setItemText(0, _translate("Form", "None"))
        self.comboBox_Normalization.setItemText(1, _translate("Form", "Div.by 255"))
        self.comboBox_Normalization.setItemText(2, _translate("Form", "StdScaling using mean and std of all training data"))
        self.comboBox_Normalization.setItemText(3, _translate("Form", "StdScaling using mean and std of each image individually"))
        self.label_icon_padding.setToolTip(_translate("Form", "By default, the padding mode is \"constant\", which means that zeros are padded.\n"
"\"edge\": Pads with the edge values of array.\n"
"\"linear_ramp\": Pads with the linear ramp between end_value and the array edge value.\n"
"\"maximum\": Pads with the maximum value of all or part of the vector along each axis.\n"
"\"mean\": Pads with the mean value of all or part of the vector along each axis.\n"
"\"median\": Pads with the median value of all or part of the vector along each axis.\n"
"\"minimum\": Pads with the minimum value of all or part of the vector along each axis.\n"
"\"reflect\": Pads with the reflection of the vector mirrored on the first and last values of the vector along each axis.\n"
"\"symmetric\": Pads with the reflection of the vector mirrored along the edge of the array.\n"
"\"wrap\": Pads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning.\n"
"Text copied from https://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html"))
        self.comboBox_zoomOrder.setItemText(0, _translate("Form", "nearest neighbor (cv2.INTER_NEAREST)"))
        self.comboBox_zoomOrder.setItemText(1, _translate("Form", "lin. interp. (cv2.INTER_LINEAR)"))
        self.comboBox_zoomOrder.setItemText(2, _translate("Form", "quadr. interp. (cv2.INTER_AREA)"))
        self.comboBox_zoomOrder.setItemText(3, _translate("Form", "cubic interp. (cv2.INTER_CUBIC)"))
        self.comboBox_zoomOrder.setItemText(4, _translate("Form", "Lanczos 4 (cv2.INTER_LANCZOS4)"))
        self.label_zoom.setToolTip(_translate("Form", "Define which zoom order should be used. A zoom order of 0 would mean nearest neighbor interploation. Zooming is applied when data is loaded into AID. Zooming is only applied of the Zoom factor given in the table above is not =1."))
        self.label_zoom.setText(_translate("Form", "Zoom order"))
        self.label_color.setToolTip(_translate("Form", "The Color Mode defines the input image depth. Color images have three channels -RGB. Grayscale images only have a single channel. Models are automatically built accordingly. Models trained for Grayscale cannot be applied to RGB images (unless images are converted). Same is true the other way around."))
        self.label_color.setText(_translate("Form", "Color mode"))
        self.label_icon_zoom.setToolTip(_translate("Form", "<html><head/><body><p>Define which zoom order should be used. A zoom order of 0 would mean nearest neighbor interploation. Zooming is applied when data is loaded into AID. Zooming is only applied of the Zoom factor given in the table above is not =1.</p></body></html>"))
        self.label_icon_color.setToolTip(_translate("Form", "The Color Mode defines the input image depth. Color images have three channels -RGB. Grayscale images only have a single channel. Models are automatically built accordingly. Models trained for Grayscale cannot be applied to RGB images (unless images are converted). Same is true the other way around."))
        self.comboBox_GrayOrRGB.setItemText(0, _translate("Form", "Grayscale"))
        self.comboBox_GrayOrRGB.setItemText(1, _translate("Form", "RGB"))
        self.comboBox_paddingMode.setItemText(0, _translate("Form", "constant"))
        self.comboBox_paddingMode.setItemText(1, _translate("Form", "edge"))
        self.comboBox_paddingMode.setItemText(2, _translate("Form", "reflect"))
        self.comboBox_paddingMode.setItemText(3, _translate("Form", "symmetric"))
        self.comboBox_paddingMode.setItemText(4, _translate("Form", "wrap"))
        self.comboBox_paddingMode.setItemText(5, _translate("Form", "delete"))
        self.comboBox_paddingMode.setItemText(6, _translate("Form", "alternate"))
        self.label_padding.setToolTip(_translate("Form", "By default, the padding mode is \"constant\", which means that zeros are padded.\n"
"\"edge\": Pads with the edge values of array.\n"
"\"linear_ramp\": Pads with the linear ramp between end_value and the array edge value.\n"
"\"maximum\": Pads with the maximum value of all or part of the vector along each axis.\n"
"\"mean\": Pads with the mean value of all or part of the vector along each axis.\n"
"\"median\": Pads with the median value of all or part of the vector along each axis.\n"
"\"minimum\": Pads with the minimum value of all or part of the vector along each axis.\n"
"\"reflect\": Pads with the reflection of the vector mirrored on the first and last values of the vector along each axis.\n"
"\"symmetric\": Pads with the reflection of the vector mirrored along the edge of the array.\n"
"\"wrap\": Pads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning.\n"
"Text copied from https://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html"))
        self.label_padding.setText(_translate("Form", "Padding mode"))
        self.groupBox_training.setTitle(_translate("Form", "Training"))
        self.label_icon_epochs.setToolTip(_translate("Form", "Models need a defined input size image. Choose wisely since large cells should not be cut."))
        self.label_nr_epochs.setToolTip(_translate("Form", "Models need a defined input size image. Choose wisely since large cells should not be cut."))
        self.label_nr_epochs.setText(_translate("Form", "Nr.epochs"))
        self.radioButton_cpu.setToolTip(_translate("Form", "Train model on CPU."))
        self.radioButton_cpu.setText(_translate("Form", "CPU"))
        self.comboBox_cpu.setItemText(0, _translate("Form", "Default CPU"))
        self.radioButton_gpu.setToolTip(_translate("Form", "Train model on GPU."))
        self.radioButton_gpu.setText(_translate("Form", "GPU"))
        self.comboBox_gpu.setToolTip(_translate("Form", "Select the device your model should be trained on. \'Multi-GPU\' will train the model on multiple GPUs in parallel."))
        self.comboBox_gpu.setItemText(0, _translate("Form", "None"))
        self.label_memory.setToolTip(_translate("Form", "Limit the amount of memory used. 1.0 means 100%; 0.5 means 50%; Typically, 0.7 is a good value for a system with one GPU."))
        self.label_memory.setText(_translate("Form", "Memory"))
        self.lineEdit_modelname.setToolTip(_translate("Form", "Define path and filename for the model you want to fit."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_define), _translate("Form", "Define model"))
        self.groupBox_example.setTitle(_translate("Form", "Example images"))
        self.comboBox_example_train.setItemText(0, _translate("Form", "Training"))
        self.comboBox_example_train.setItemText(1, _translate("Form", "Validation"))
        self.comboBox_example_aug.setItemText(0, _translate("Form", "Original"))
        self.comboBox_example_aug.setItemText(1, _translate("Form", "Augm."))
        self.label_class.setText(_translate("Form", "Class"))
        self.comboBox_ShowIndex.setItemText(0, _translate("Form", "0"))
        self.comboBox_ShowIndex.setItemText(1, _translate("Form", "1"))
        self.comboBox_ShowIndex.setItemText(2, _translate("Form", "2"))
        self.comboBox_ShowIndex.setItemText(3, _translate("Form", "3"))
        self.comboBox_ShowIndex.setItemText(4, _translate("Form", "4"))
        self.comboBox_ShowIndex.setItemText(5, _translate("Form", "5"))
        self.comboBox_ShowIndex.setItemText(6, _translate("Form", "6"))
        self.comboBox_ShowIndex.setItemText(7, _translate("Form", "7"))
        self.comboBox_ShowIndex.setItemText(8, _translate("Form", "8"))
        self.comboBox_ShowIndex.setItemText(9, _translate("Form", "9"))
        self.btn_show.setText(_translate("Form", "Show"))
        self.groupBox_options.setTitle(_translate("Form", "Options"))
        self.label_brightn_refresh.setToolTip(_translate("Form", "<html><head/><body><p>Brightness augmentation is really fast, so best you refresh images for each epoch (set to 1)</p></body></html>"))
        self.label_brightn_refresh.setText(_translate("Form", "Refresh after nr.epochs"))
        self.spinBox_RefreshAfterEpochs.setToolTip(_translate("Form", "<html><head/><body><p>Brightness augmentation is really fast, so best you refresh images for each epoch (set to 1)</p></body></html>"))
        self.groupBox_aug_option_2.setTitle(_translate("Form", "Augmentation options"))
        self.checkBox_HorizFlip.setToolTip(_translate("Form", "\"<html><head/><body><p>Should training images be flipped by horiz. axis (bottom up; top down)?</p></body></html>"))
        self.checkBox_HorizFlip.setText(_translate("Form", "Horiz.flip"))
        self.checkBox_shear_2.setToolTip(_translate("Form", "<html><head/><body><p>Shear Intensity (Shear angle in counter-clockwise direction in degrees)</p></body></html>"))
        self.checkBox_shear_2.setText(_translate("Form", "Shear"))
        self.checkBox_rotation.setToolTip(_translate("Form", "<html><head/><body><p>Degree range for random rotations</p></body></html>"))
        self.checkBox_rotation.setText(_translate("Form", "Rotation"))
        self.checkBox_height_shift.setToolTip(_translate("Form", "\"<html><head/><body><p>Define random shift of height<br>Fraction of total height if &lt; 1. Otherwise pixels if>=1.<br>Value defines an interval (-height_shift_range, +height_shift_range) from which random numbers are created   </p></body></html>"))
        self.checkBox_height_shift.setText(_translate("Form", "Height shift"))
        self.checkBox_VertFlip.setToolTip(_translate("Form", "\"<html><head/><body><p>Should training images be flipped by vert. axis (left becomes right; right becomes left)?</p></body></html>\""))
        self.checkBox_VertFlip.setText(_translate("Form", "Vert.flip"))
        self.checkBox_width_shift_2.setToolTip(_translate("Form", "\"<html><head/><body><p>Define random shift of width<br>Fraction of total width, if &lt; 1. Otherwise pixels if>=1.<br>Value defines an interval (-width_shift_range, +width_shift_range) from which random numbers are created</p></body></html>"))
        self.checkBox_width_shift_2.setText(_translate("Form", "Width shift"))
        self.checkBox_zoom.setToolTip(_translate("Form", "<html><head/><body><p>Range for random zoom</p></body></html>"))
        self.checkBox_zoom.setText(_translate("Form", "Zoom"))
        self.lineEdit_Rotation.setText(_translate("Form", "3"))
        self.lineEdit_widthShift.setText(_translate("Form", "0.001"))
        self.lineEdit_heightShift.setText(_translate("Form", "0.001"))
        self.lineEdit_zoomRange.setText(_translate("Form", "0.001"))
        self.lineEdit_shearRange.setText(_translate("Form", "0.001"))
        self.groupBox_brightness.setToolTip(_translate("Form", "\"<html><head/><body><p>Define add/multiply offset to make image randomly slightly brighter or darker. Additive offset (A) is one number that is added to all pixels values; Multipl. offset (M) is a value to multiply each pixel value with: NewImage = A + M*Image</p></body></html>\""))
        self.groupBox_brightness.setTitle(_translate("Form", "Brightness"))
        self.checkBox_add.setToolTip(_translate("Form", "<html><head/><body><p>Define lower threshold for additive offset</p></body></html>"))
        self.checkBox_add.setText(_translate("Form", "Add."))
        self.spinBox_PlusLower.setToolTip(_translate("Form", "<html><head/><body><p>Define lower threshold for additive offset</p></body></html>"))
        self.spinBox_PlusUpper.setToolTip(_translate("Form", "<html><head/><body><p>Define upper threshold for additive offset</p></body></html>"))
        self.checkBox_mult.setToolTip(_translate("Form", "<html><head/><body><p>Define lower threshold for multiplicative offset</p></body></html>"))
        self.checkBox_mult.setText(_translate("Form", "Mult."))
        self.groupBox_gaussian.setToolTip(_translate("Form", "<html><head/><body><p>Define Gaussian Noise, which is added to the image</p></body></html>"))
        self.groupBox_gaussian.setTitle(_translate("Form", "Gaussian noise"))
        self.checkBox_gauss_mean.setToolTip(_translate("Form", "<html><head/><body><p>Define the mean of the Gaussian noise. Typically this should be zero. If you use a positive number it would mean that your noise tends to be positive, and adding this to the image results in a more noisy and brighter image</p></body></html>"))
        self.checkBox_gauss_mean.setText(_translate("Form", "Mean"))
        self.doubleSpinBox_GaussianNoiseMean.setToolTip(_translate("Form", "<html><head/><body><p>Define the mean of the Gaussian noise. Typically this should be zero. If you use a positive number it would mean that your noise tends to be positive, and adding this to the image results in a more noisy and brighter image</p></body></html>"))
        self.checkBox_gauss_scale.setToolTip(_translate("Form", "<html><head/><body><p>Define the standard deviation of the Gaussian noise. A larger number means a wider distribution of the noise, which results in an image that looks more noisy. Prefer to change this parameter over chainging the mean.</p></body></html>"))
        self.checkBox_gauss_scale.setText(_translate("Form", "Scale"))
        self.doubleSpinBox_GaussianNoiseScale.setToolTip(_translate("Form", "<html><head/><body><p>Define the standard deviation of the Gaussian noise. A larger number means a wider distribution of the noise, which results in an image that looks more noisy. Prefer to change this parameter over chainging the mean.</p></body></html>"))
        self.groupBox_color.setTitle(_translate("Form", "Color"))
        self.checkBox_contrast.setToolTip(_translate("Form", "Augment contrast using a random factor. Applicable for Grayscale and RGB. Left spinbox (lower factor) has to be >0. \'0.70\' to \'1.3\' means plus/minus 30% contrast (at random)"))
        self.checkBox_contrast.setText(_translate("Form", "Contrast"))
        self.checkBox_saturation.setToolTip(_translate("Form", "Augment saturation using a random factor. Applicable for RGB only. Left spinbox (lower factor) has to be >0. \'0.70\' to \'1.3\' means plus/minus 30% saturation (at random)"))
        self.checkBox_saturation.setText(_translate("Form", "Saturation"))
        self.checkBox_hue.setToolTip(_translate("Form", "Augment hue using a random factor. Applicable for RGB only. Left spinbox (lower factor) has to be >0. \'0.70\' to \'1.3\' means plus/minus 30% hue (at random)"))
        self.checkBox_hue.setText(_translate("Form", "Hue"))
        self.groupBox_blurring.setTitle(_translate("Form", "Blurring"))
        self.label_min.setText(_translate("Form", "Min"))
        self.label_max.setText(_translate("Form", "Max"))
        self.checkBox_avgBlur.setToolTip(_translate("Form", "Apply random average blurring. Define a range of kernel sizes for the average blur (min. and max. kernel size). Values from this range are then randomly picked for each image. To blur an image, all pixels within the kernel area used to compute an average pixel value. The central element of the kernel area in the image is then set to this value. This operation is carried out over the entire image."))
        self.checkBox_avgBlur.setText(_translate("Form", "Average"))
        self.spinBox_avgBlurMin.setToolTip(_translate("Form", "Define the minimum kernel size for average blur"))
        self.spinBox_avgBlurMax.setToolTip(_translate("Form", "Define the maximum kernel size for average blur"))
        self.checkBox_gaussBlur.setToolTip(_translate("Form", "Apply random gaussian blurring. For gaussian blurring, a gaussian kernel of defined size is used. Please define a min. and max. kernel size. For each image a random value is picked from this range to generate a gaussian kernel."))
        self.checkBox_gaussBlur.setText(_translate("Form", "Gauss"))
        self.spinBox_gaussBlurMin.setToolTip(_translate("Form", "Define the minimum kernel size for gaussian blur"))
        self.spinBox_gaussBlurMax.setToolTip(_translate("Form", "Define the maximum kernel size for gaussian blur"))
        self.label_kernel.setToolTip(_translate("Form", "Define kernels by giving a range [min,max]. Values in this range are then randomly picked for each image"))
        self.label_kernel.setText(_translate("Form", "Kernel"))
        self.label_angle.setToolTip(_translate("Form", "Define angle for the motion blur by giving a range [min degree,max degree]. Values in this range are then randomly picked for each image"))
        self.label_angle.setText(_translate("Form", "Angle"))
        self.checkBox_motionBlur.setToolTip(_translate("Form", "Apply random motion blurring. Motion blur is defined by an intensity (\'kernel\') and a direction (\'angle\'). Please define a range for \'kernel\' and \'angle\'. AID will pick a random value (within each range) for each image."))
        self.checkBox_motionBlur.setText(_translate("Form", "Motion"))
        self.lineEdit_motionBlurKernel.setToolTip(_translate("Form", "Define kernels by defining a range \"min,max\". Values in this range are then randomly picked for each image"))
        self.lineEdit_motionBlurKernel.setText(_translate("Form", "0,5"))
        self.lineEdit_motionBlurAngle.setToolTip(_translate("Form", "Define angle for the motion blur by defining a range \"min degree,max degree\". Values in this range are then randomly picked for each image"))
        self.lineEdit_motionBlurAngle.setText(_translate("Form", "-10,10"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_brightn), _translate("Form", "Augmentation"))
        self.groupBox_Finalize.setTitle(_translate("Form", "Finalize and Fit"))
        self.pushButton_FitModel.setToolTip(_translate("Form", "Afer defining all model parameters, hit this button to build/initialize the model, load the data to RAM (if \'Load data to RAM\' is chosen in \'Edit\') and start the fitting process. You can also do only the initialization to check the model summary (appears in textbox on the left)."))
        self.pushButton_FitModel.setText(_translate("Form", "Initialize/Fit\n"
"Model"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_build), _translate("Form", "Build"))
        self.pushButton_Live.setToolTip(_translate("Form", "<html><head/><body><p>Load and display the model which is currently fitted</p></body></html>"))
        self.pushButton_Live.setText(_translate("Form", "Live"))
        self.pushButton_LoadHistory.setToolTip(_translate("Form", "<html><head/><body><p>Select a history file to be plotted</p></body></html>"))
        self.pushButton_LoadHistory.setText(_translate("Form", "Load History"))
        self.pushButton_UpdateHistoryPlot.setText(_translate("Form", "Update plot"))
        self.checkBox_rollingMedian.setText(_translate("Form", "Rolling median"))
        self.checkBox_linearFit.setText(_translate("Form", "Linear fit"))
        self.tableWidget_HistoryItems.setToolTip(_translate("Form", "Information of the history file is shown here"))
        self.label_loadAndConvertModel.setText(_translate("Form", "Load and convert model"))
        self.pushButton_loadModel.setToolTip(_translate("Form", "Load a specific model for conversion"))
        self.pushButton_loadModel.setText(_translate("Form", "Load"))
        self.comboBox_convertTo.setToolTip(_translate("Form", "Choose a target file format"))
        self.pushButton_convertModel.setText(_translate("Form", "Convert"))
        self.lineEdit_LoadHistory.setToolTip(_translate("Form", "Enter path and filename of a history-file (.csv)"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_history), _translate("Form", "History"))
from MyWidget import MyDoubleSpinBox, MySpinBox, MyTable
import art_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
