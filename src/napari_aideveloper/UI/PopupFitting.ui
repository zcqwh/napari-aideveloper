<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="enabled">
   <bool>true</bool>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>783</width>
    <height>706</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">/* 
Styles in this file should only refer to built-in QtWidgets
It will be imported first, and styles declared in other files
may override these styles, but should only do so on
custom subclasses, object names, or properties.

might be possible to convert px to em by 1px = 0.0625em
*/



/* ----------------- QWidget ------------------ */
/* 

mappings between property and QPalette.ColorRole:
these colors can be looked up dynamically in widgets using, e.g
``widget.palette().color(QPalette.Window)``

background -&gt; QPalette.Window/QPalette.Background
  background-color -&gt; QPalette.Window/QPalette.Background
color -&gt; QPalette.WindowText/QPalette.Foreground
selection-color -&gt; QPalette.HighlightedText
selection-background-color -&gt; QPalette.Highlight
alternate-background-color -&gt; QPalette.AlternateBase

*/

QWidget {
  background-color: rgb(38, 41, 48);
  border: 0px;
  padding: 1px;
  margin: 0px;
  color: rgb(240, 241, 242);
  selection-background-color: rgb(134, 142, 147);
  selection-color: rgb(240, 241, 242);
}

QWidget[emphasized=&quot;true&quot;] {
    background-color: rgb(65, 72, 81);
}

QWidget[emphasized=&quot;true&quot;] &gt; QFrame {
    background-color: rgb(65, 72, 81);
}


/* ------------ QAbstractScrollArea ------------- */

/* QAbstractScrollArea is the superclass */ 

QTextEdit {
  background-color: rgb(0, 0, 0);
  background-clip: padding;
  color: rgb(240, 241, 242);
  selection-background-color: rgb(65, 72, 81);
  padding: 4px 2px 4px 4px;
}

/* the area behind the scrollbar */
QTextEdit &gt; QWidget {
  background-color: rgb(0, 0, 0);
}

/* ----------------- QPushButton ------------------ */

QPushButton {
  background-color: rgb(65, 72, 81);
  border-radius: 2px;
  padding: 4px;
  border: 0px;
}

QPushButton:hover {
  background-color: rgb(90, 98, 108);
}

QPushButton:pressed {
  background-color: rgb(106, 115, 128);
}

QPushButton:checked {
  background-color: rgb(106, 115, 128);
}

QPushButton:disabled {
  background-color: rgb(38, 41, 48);
}

QWidget[emphasized=&quot;true&quot;] QPushButton {
   background-color: rgb(90, 98, 108);
}

QWidget[emphasized=&quot;true&quot;] QPushButton:disabled {
  background-color: rgb(52, 57, 64);
}

QWidget[emphasized=&quot;true&quot;] QPushButton:hover {
    background-color: rgb(106, 115, 128);
}

QWidget[emphasized=&quot;true&quot;] QPushButton:pressed {
  background-color: rgb(134, 142, 147);
}


QWidget[emphasized=&quot;true&quot;] QPushButton:checked {
  background-color: rgb(0, 122, 204);
}

/* ----------------- QComboBox ------------------ */

QComboBox {
  border-radius: 2px;
  background-color: rgb(65, 72, 81);
  padding: 3px 10px 3px 8px; /* top right bottom left */
}

QWidget[emphasized=&quot;true&quot;]  QComboBox {
  background-color: rgb(90, 98, 108);
}


QComboBox::drop-down {
  width: 26px;
  border-top-right-radius: 2px;
  border-bottom-right-radius: 2px;
}

QComboBox::down-arrow {
   image: url(&quot;:/themes/dark/drop_down_50.svg&quot;);
   width: 14px;
   height: 14px;
}

QComboBox::down-arrow:on {
  /* when the dropdown is open */
}

QComboBox:on {
  border-radius: 0px;
}

QListView {
  /* controls the color of the open dropdown menu */ 
  background-color: rgb(65, 72, 81);
  color: rgb(240, 241, 242);
  border-radius: 2px;
}

QWidget[emphasized=&quot;true&quot;] QComboBox {
  background-color: rgb(90, 98, 108);
}

/* ----------------- QLineEdit ------------------ */

QLineEdit {
  background-color: rgb(32, 34, 40);
  color: rgb(240, 241, 242);
  min-height: 20px;
  padding: 2px;
  border-radius: 2px;
}

QWidget[emphasized=&quot;true&quot;] QLineEdit {
  background-color: rgb(38, 41, 48);
}

/* ----------------- QAbstractSpinBox ------------------ */

QAbstractSpinBox {
  background-color: rgb(65, 72, 81);
  border: none;
  padding: 1px 10px;
  min-width: 70px;
  min-height: 18px;
  border-radius: 2px;
}

QLabeledSlider &gt; QAbstractSpinBox {
  min-width: 10px;
  padding: 0px;
}

QWidget[emphasized=&quot;true&quot;] QAbstractSpinBox {
  background-color: rgb(90, 98, 108);
}

QAbstractSpinBox::up-button,
QAbstractSpinBox::down-button {
    subcontrol-origin: margin;
    width: 20px;
    height: 20px;
}

QAbstractSpinBox::up-button:hover,
QAbstractSpinBox::down-button:hover {
  background-color: rgb(90, 98, 108);
}

QWidget[emphasized=&quot;true&quot;] QAbstractSpinBox::up-button:hover,
QWidget[emphasized=&quot;true&quot;] QAbstractSpinBox::down-button:hover {
  background-color: rgb(106, 115, 128);
}

QAbstractSpinBox::up-button:pressed,
QAbstractSpinBox::down-button:pressed {
  background-color: rgb(106, 115, 128);
}

QWidget[emphasized=&quot;true&quot;] QAbstractSpinBox::up-button:pressed,
QWidget[emphasized=&quot;true&quot;] QAbstractSpinBox::down-button:pressed {
  background-color: rgb(126, 135, 148);
}

QAbstractSpinBox::up-button {
  subcontrol-position: center right;
  right: 0px;
  border-top-right-radius: 2px;
  border-bottom-right-radius: 2px;
}


QAbstractSpinBox::down-button {
  subcontrol-position: center left;
  left: 0px;
  border-top-left-radius: 2px;
  border-bottom-left-radius: 2px;
}

QAbstractSpinBox::up-arrow,
QAbstractSpinBox::down-arrow {
   width: 10px;
   height: 10px;
}

QAbstractSpinBox::up-arrow {
   image: url(&quot;:/themes/dark/plus_50.svg&quot;);
}

QAbstractSpinBox::down-arrow {
   image: url(&quot;:/themes/dark/minus_50.svg&quot;);
}

QLabeledRangeSlider &gt; QAbstractSpinBox {
  min-width: 5px;
}

/* ----------------- QCheckBox ------------------ */

QCheckBox {
  spacing: 5px;
  color: rgb(240, 241, 242);
  background-color: none;
}

QCheckBox::indicator {
  width: 16px;
  height: 16px;
  background-color: rgb(65, 72, 81);
  border: 0px;
  padding: 1px;
  border-radius: 2px
}

QCheckBox::indicator:hover {
  background-color: rgb(73, 80, 91);
}

QCheckBox::indicator:unchecked {
  image: none;
}

QCheckBox::indicator:checked {
  image: url(&quot;:/themes/dark/check.svg&quot;);
}

QCheckBox::indicator:indeterminate {
  padding: 2px;
  width: 14px;
  height: 14px;
}

QWidget[emphasized=&quot;true&quot;] QCheckBox::indicator {
  background-color: rgb(90, 98, 108);
  border-color: rgb(90, 98, 108);
}

QWidget[emphasized=&quot;true&quot;] QCheckBox::indicator:hover {
  background-color: rgb(97, 105, 113);
}

QWidget[emphasized=&quot;true&quot;] QCheckBox::indicator:unchecked:hover {
  background-color: rgb(97, 105, 113);
  border-color: rgb(97, 105, 113);
}


/* ----------------- QRadioButton ------------------ */

QRadioButton {
  background: none;
}

QRadioButton::indicator{
  height: 16px;
  width: 16px;
  border-radius: 8px;
}

QRadioButton::indicator::unchecked {
  background: rgb(65, 72, 81);
}

QRadioButton::indicator:unchecked:hover {
  background: rgb(73, 80, 91);
}


QRadioButton::indicator::checked {
    background: rgb(106, 115, 128);
}

QRadioButton::indicator::checked {
  image: url(&quot;:/themes/dark/circle.svg&quot;);
  height: 6px;
  width: 6px;
  padding: 5px;
}

QWidget[emphasized=&quot;true&quot;] &gt; QRadioButton {
   background: rgb(65, 72, 81);
}

QWidget[emphasized=&quot;true&quot;] &gt; QRadioButton::indicator::unchecked {
   background-color: rgb(90, 98, 108);
}

QWidget[emphasized=&quot;true&quot;] &gt; QRadioButton:disabled {
  background-color: rgb(65, 72, 81);
}

QWidget[emphasized=&quot;true&quot;] &gt; QRadioButton::indicator:checked {
  background-color: rgb(134, 142, 147);
}

QWidget[emphasized=&quot;true&quot;] &gt; QRadioButton::indicator:unchecked:hover {
  background: rgb(97, 105, 113);
}


/* ----------------- QSlider ------------------ */


QSlider {
   background-color: none;
}

QSlider::groove:horizontal {
   border: 0px;
   background-color: rgb(65, 72, 81);
   height: 6px;
   border-radius: 2px;
}

QSlider::handle:horizontal {
   background-color: rgb(106, 115, 128);
   border: 0px;
   width: 16px;
   margin-top: -5px;
   margin-bottom: -5px;
   border-radius: 8px;
}

QSlider::handle:hover {
   background-color: rgb(134, 142, 147);
}

QSlider::sub-page:horizontal {
    background: rgb(90, 98, 108);
    border-radius: 2px;
}


QWidget[emphasized=&quot;true&quot;] QSlider::groove:horizontal {
   background: rgb(90, 98, 108);
}

QWidget[emphasized=&quot;true&quot;] QSlider::handle:horizontal {
   background: rgb(134, 142, 147);

}

QWidget[emphasized=&quot;true&quot;] QSlider::sub-page:horizontal {
    background: rgb(106, 115, 128);
}

QWidget[emphasized=&quot;true&quot;] QSlider::handle:hover {
   background-color: rgb(140, 147, 152);
}


QRangeSlider {
  qproperty-barColor: rgb(90, 98, 108);
}

QWidget[emphasized=&quot;true&quot;] QRangeSlider {
  qproperty-barColor: rgb(106, 115, 128);
}

/* ----------------- QScrollBar ------------------ */

QScrollBar {
  border: none;
  border-radius: 2px;
  background: rgb(65, 72, 81);
}

QWidget[emphasized=&quot;true&quot;] QScrollBar {
  background: rgb(90, 98, 108);
}

QScrollBar:horizontal {
    min-height: 13px;
    max-height: 13px;
    margin: 0px 16px;
}

QScrollBar:vertical {
    max-width: 13px;
    margin: 16px 0px;
}

QScrollBar::handle {
  background: rgb(106, 115, 128);
  border-radius: 2px;
}

QWidget[emphasized=&quot;true&quot;] QScrollBar::handle {
  background: rgb(134, 142, 147);
}

QScrollBar::handle:horizontal {
    min-width: 26px;
}

QScrollBar::handle:vertical {
    min-height: 26px;
}

QScrollBar::add-line, QScrollBar::sub-line {
    border: none;
    border-radius: 2px;
    background: rgb(65, 72, 81);
    subcontrol-origin: margin;
}

QWidget[emphasized=&quot;true&quot;] QScrollBar::add-line, 
QWidget[emphasized=&quot;true&quot;] QScrollBar::sub-line {
    background: rgb(90, 98, 108);
}

QScrollBar::add-line:horizontal {
    width: 13px;
    subcontrol-position: right;
}

QScrollBar::sub-line:horizontal {
    width: 13px;
    subcontrol-position: left;
}

QScrollBar::add-line:vertical {
    height: 13px;
    subcontrol-position: bottom;
}

QScrollBar::sub-line:vertical {
    height: 13px;
    subcontrol-position: top;
}

QScrollBar::add-line:horizontal:pressed, 
QScrollBar::sub-line:horizontal:pressed {
    background: rgb(106, 115, 128);
}

QWidget[emphasized=&quot;true&quot;] QScrollBar::add-line:horizontal:pressed, 
QWidget[emphasized=&quot;true&quot;] QScrollBar::sub-line:horizontal:pressed {
    background: rgb(134, 142, 147);
}

QScrollBar:left-arrow:horizontal {
    image: url(&quot;:/themes/dark/left_arrow.svg&quot;);
}

QScrollBar::right-arrow:horizontal {
    image: url(&quot;:/themes/dark/right_arrow.svg&quot;);
}

QScrollBar:up-arrow:vertical {
    image: url(&quot;:/themes/dark/up_arrow.svg&quot;);
}

QScrollBar::down-arrow:vertical {
    image: url(&quot;:/themes/dark/down_arrow.svg&quot;);
}

QScrollBar::left-arrow,
QScrollBar::right-arrow,
QScrollBar::up-arrow,
QScrollBar::down-arrow {
  min-height: 13px;
  min-width: 13px;
  max-height: 13px;
  max-width: 13px;
  padding: 1px 2px;
  margin: 0;
  border: 0;
  border-radius: 2px;
  background: rgb(65, 72, 81);
}

QScrollBar::left-arrow:hover,
QScrollBar::right-arrow:hover,
QScrollBar::up-arrow:hover,
QScrollBar::down-arrow:hover {
  background-color: rgb(90, 98, 108);
}

QScrollBar::left-arrow:pressed,
QScrollBar::right-arrow:pressed,
QScrollBar::up-arrow:pressed,
QScrollBar::down-arrow:pressed {
  background-color: rgb(106, 115, 128);
}


QScrollBar::add-page,
QScrollBar::sub-page {
    background: none;
}

/* ----------------- QProgressBar ------------------ */

QProgressBar {
    border: 1px solid rgb(65, 72, 81);
    border-radius: 2px;
    text-align: center;
    padding: 0px;
}

QProgressBar::horizontal {
  height: 18px;
}

QProgressBar::vertical {
  width: 18px;
}

QProgressBar::chunk {
	width: 1px;
	background:qlineargradient(spread:pad,x1:0,y1:0,x2:0,y2:1,stop:0 rgb(106, 115, 128),stop:1 rgb(65, 72, 81));
}

/* ----------------- QToolTip ------------------ */

QToolTip {
    border: 1px solid rgb(65, 72, 81);
    border-radius: 2px;
    padding: 2px;
    background-color: rgb(38, 41, 48);
    color: rgb(240, 241, 242);
}

/* ----------------- QGroupBox ------------------ */

QGroupBox {
    background-color: rgb(38, 41, 48);
    border: 1px solid rgb(65, 72, 81);
    border-radius: 5px;
    margin-top: 1ex; /* leave space at the top for the title */
}

QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top left;
    left: 10px;
    padding: 0 3px;
    background-color: rgb(38, 41, 48);
}


/* ----------------- QTabWidget ------------------ */

/* The tab widget frame */
QTabWidget::pane {
  border: 1px solid rgb(58, 64, 72);
  border-radius: 2px;
}

QWidget[emphasized=&quot;true&quot;] QTabWidget::pane {
  border: 1px solid rgb(81, 88, 97);
}

QTabBar::tab {
  background-color: rgb(65, 72, 81);
  border: 1px solid rgb(38, 41, 48);
  border-bottom: 0px;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  padding: 3px 6px;
  background:qlineargradient(spread:pad,x1:0,y1:0,x2:0,y2:1,stop:0 rgb(89, 98, 111),stop:1 rgb(65, 72, 81));
}


QWidget[emphasized=&quot;true&quot;] QTabBar::tab {
  background-color: rgb(90, 98, 108);
  border: 1px solid rgb(65, 72, 81);
  background:qlineargradient(spread:pad,x1:0,y1:0,x2:0,y2:1,stop:0 rgb(111, 121, 133),stop:1 rgb(90, 98, 108));
}

QTabBar::tab:selected {
  background:qlineargradient(spread:pad,x1:0,y1:0,x2:0,y2:1,stop:0 rgb(126, 135, 148),stop:1 rgb(106, 115, 128));
}

QWidget[emphasized=&quot;true&quot;] QTabBar::tab:selected {
    background:qlineargradient(spread:pad,x1:0,y1:0,x2:0,y2:1,stop:0 rgb(152, 158, 163),stop:1 gb(134, 142, 147));
}

/* ----------------- QLabel ------------------ */

QLabel {
  background-color: none;
}

/* ----------------- QMenuBar ------------------ */

QMenuBar::item:selected {
   background-color: rgb(134, 142, 147);
}

QLCDNumber {
  background: none;
}

/* ----------------- QStatusBar ------------------ */

QStatusBar::item{
  border: None;
}

/* ----------------- QHeaderView ----------------- */
QHeaderView::section {
  background-color: rgb(38, 41, 48);
  padding: 2px;
}
</string>
  </property>
  <layout class="QGridLayout" name="gridLayout_2">
   <property name="leftMargin">
    <number>6</number>
   </property>
   <property name="topMargin">
    <number>6</number>
   </property>
   <property name="rightMargin">
    <number>6</number>
   </property>
   <property name="bottomMargin">
    <number>6</number>
   </property>
   <item row="0" column="0">
    <widget class="QSplitter" name="splitter_5">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="childrenCollapsible">
      <bool>false</bool>
     </property>
     <widget class="QSplitter" name="splitter_4">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Preferred" vsizetype="Maximum">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="childrenCollapsible">
       <bool>false</bool>
      </property>
      <widget class="QGroupBox" name="groupBox">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="title">
        <string>Metrics keys</string>
       </property>
       <layout class="QGridLayout" name="gridLayout_5">
        <property name="leftMargin">
         <number>6</number>
        </property>
        <property name="rightMargin">
         <number>6</number>
        </property>
        <item row="0" column="0">
         <widget class="QTableWidget" name="tableWidget_HistoryInfo_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Expanding">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>492</width>
            <height>0</height>
           </size>
          </property>
         </widget>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="layoutWidget">
       <layout class="QVBoxLayout" name="verticalLayout_2_pop">
        <property name="sizeConstraint">
         <enum>QLayout::SetDefaultConstraint</enum>
        </property>
        <item>
         <widget class="QPushButton" name="pushButton_UpdatePlot_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="text">
           <string>Update Plot</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_realTimePlotting_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Add for each curve a rolling median curve, which uses a window size of 10&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>Real time plotting</string>
          </property>
          <property name="checked">
           <bool>true</bool>
          </property>
         </widget>
        </item>
        <item>
         <layout class="QHBoxLayout" name="horizontalLayout">
          <item>
           <widget class="QLabel" name="label_realTimeEpochs_pop">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Maximum" vsizetype="Preferred">
              <horstretch>0</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="text">
             <string>Nr. of epochs for RT</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="spinBox_realTimeEpochs">
            <property name="minimum">
             <number>1</number>
            </property>
            <property name="maximum">
             <number>9999999</number>
            </property>
            <property name="value">
             <number>250</number>
            </property>
           </widget>
          </item>
         </layout>
        </item>
       </layout>
      </widget>
     </widget>
     <widget class="GraphicsLayoutWidget" name="widget_pop" native="true">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Preferred" vsizetype="Maximum">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="minimumSize">
       <size>
        <width>771</width>
        <height>331</height>
       </size>
      </property>
     </widget>
     <widget class="QSplitter" name="splitter">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="childrenCollapsible">
       <bool>false</bool>
      </property>
      <widget class="QGroupBox" name="groupBox_FittingInfo_pop">
       <property name="title">
        <string>Fitting Info</string>
       </property>
       <layout class="QGridLayout" name="gridLayout_2_pop">
        <item row="0" column="0">
         <widget class="QProgressBar" name="progressBar_Fitting_pop">
          <property name="styleSheet">
           <string notr="true">QProgressBar {
    border: 1px solid rgb(65, 72, 81);
    border-radius: 2px;
    text-align: center;
    padding: 0px;
}

QProgressBar::horizontal {
  height: 18px;
}

QProgressBar::vertical {
  width: 18px;
}

QProgressBar::chunk {
	width: 1px;
	background:qlineargradient(spread:pad,x1:0,y1:0,x2:0,y2:1,stop:0 rgb(106, 115, 128),stop:1 rgb(65, 72, 81));
}</string>
          </property>
          <property name="value">
           <number>24</number>
          </property>
         </widget>
        </item>
        <item row="1" column="0">
         <widget class="QTextBrowser" name="textBrowser_FittingInfo">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
         </widget>
        </item>
        <item row="2" column="0">
         <layout class="QHBoxLayout" name="horizontalLayout_saveClearText_pop">
          <item>
           <widget class="QPushButton" name="pushButton_saveTextWindow_pop">
            <property name="text">
             <string>Save text </string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QPushButton" name="pushButton_clearTextWindow_pop">
            <property name="toolTip">
             <string>Clear the text window (fitting info)</string>
            </property>
            <property name="text">
             <string>Clear text</string>
            </property>
           </widget>
          </item>
         </layout>
        </item>
       </layout>
      </widget>
      <widget class="QGroupBox" name="groupBox_DefineModel_pop">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Expanding" vsizetype="Minimum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string/>
       </property>
       <property name="title">
        <string>Fitting parameters</string>
       </property>
       <layout class="QGridLayout" name="gridLayout">
        <property name="leftMargin">
         <number>6</number>
        </property>
        <property name="topMargin">
         <number>12</number>
        </property>
        <property name="rightMargin">
         <number>6</number>
        </property>
        <property name="bottomMargin">
         <number>6</number>
        </property>
        <item row="3" column="3">
         <widget class="QPushButton" name="pushButton_Pause_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Maximum" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>60</width>
            <height>40</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>60</width>
            <height>40</height>
           </size>
          </property>
          <property name="toolTip">
           <string>Pause fitting, push this button again to continue</string>
          </property>
          <property name="text">
           <string notr="true"/>
          </property>
          <property name="icon">
           <iconset resource="art.qrc">
            <normaloff>:/icon/icon/pause.png</normaloff>:/icon/icon/pause.png</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>30</width>
            <height>30</height>
           </size>
          </property>
         </widget>
        </item>
        <item row="3" column="4">
         <widget class="QPushButton" name="pushButton_Stop_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Maximum" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>60</width>
            <height>40</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>60</width>
            <height>40</height>
           </size>
          </property>
          <property name="toolTip">
           <string>Stop fitting entirely, Close this window manually, after the progressbar shows 100%</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="art.qrc">
            <normaloff>:/icon/icon/stop.png</normaloff>:/icon/icon/stop.png</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>18</width>
            <height>18</height>
           </size>
          </property>
         </widget>
        </item>
        <item row="3" column="1">
         <widget class="QCheckBox" name="checkBox_saveEpoch_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Maximum" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="contextMenuPolicy">
           <enum>Qt::DefaultContextMenu</enum>
          </property>
          <property name="toolTip">
           <string>Save the model, when the current epoch is done</string>
          </property>
          <property name="text">
           <string>Save epoch</string>
          </property>
          <property name="icon">
           <iconset resource="art.qrc">
            <normaloff>:/icon/icon/save_epoch.png</normaloff>:/icon/icon/save_epoch.png</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>20</width>
            <height>20</height>
           </size>
          </property>
         </widget>
        </item>
        <item row="3" column="0">
         <widget class="QCheckBox" name="checkBox_ApplyNextEpoch">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Maximum" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="toolTip">
           <string>Changes made in this window will be applied at the next epoch</string>
          </property>
          <property name="layoutDirection">
           <enum>Qt::LeftToRight</enum>
          </property>
          <property name="autoFillBackground">
           <bool>false</bool>
          </property>
          <property name="text">
           <string>Apply at next epoch</string>
          </property>
          <property name="icon">
           <iconset resource="art.qrc">
            <normaloff>:/icon/icon/thumb.png</normaloff>:/icon/icon/thumb.png</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>20</width>
            <height>20</height>
           </size>
          </property>
          <property name="tristate">
           <bool>false</bool>
          </property>
         </widget>
        </item>
        <item row="0" column="0" colspan="5">
         <widget class="QGroupBox" name="groupBox_expt_imgProc_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="title">
           <string>Image processing</string>
          </property>
          <layout class="QGridLayout" name="gridLayout_14">
           <item row="0" column="0">
            <widget class="QLabel" name="label_icon_padding">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="minimumSize">
              <size>
               <width>21</width>
               <height>21</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>21</width>
               <height>21</height>
              </size>
             </property>
             <property name="text">
              <string/>
             </property>
             <property name="pixmap">
              <pixmap resource="art.qrc">:/icon/icon/padding.png</pixmap>
             </property>
             <property name="scaledContents">
              <bool>true</bool>
             </property>
             <property name="alignment">
              <set>Qt::AlignCenter</set>
             </property>
            </widget>
           </item>
           <item row="0" column="1">
            <widget class="QLabel" name="label_paddingMode_pop">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Maximum" vsizetype="Preferred">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="text">
              <string>Padding mode</string>
             </property>
            </widget>
           </item>
           <item row="0" column="2">
            <widget class="QComboBox" name="comboBox_paddingMode_pop">
             <property name="enabled">
              <bool>true</bool>
             </property>
             <property name="toolTip">
              <string>By default, the padding mode is &quot;constant&quot;, which means that zeros are padded.
&quot;edge&quot;: Pads with the edge values of array.
&quot;linear_ramp&quot;: Pads with the linear ramp between end_value and the array edge value.
&quot;maximum&quot;: Pads with the maximum value of all or part of the vector along each axis.
&quot;mean&quot;: Pads with the mean value of all or part of the vector along each axis.
&quot;median&quot;: Pads with the median value of all or part of the vector along each axis.
&quot;minimum&quot;: Pads with the minimum value of all or part of the vector along each axis.
&quot;reflect&quot;: Pads with the reflection of the vector mirrored on the first and last values of the vector along each axis.
&quot;symmetric&quot;: Pads with the reflection of the vector mirrored along the edge of the array.
&quot;wrap&quot;: Pads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning.
Text copied from https://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html</string>
             </property>
             <item>
              <property name="text">
               <string>constant</string>
              </property>
             </item>
             <item>
              <property name="text">
               <string>edge</string>
              </property>
             </item>
             <item>
              <property name="text">
               <string>linear_ramp</string>
              </property>
             </item>
             <item>
              <property name="text">
               <string>maximum</string>
              </property>
             </item>
             <item>
              <property name="text">
               <string>mean</string>
              </property>
             </item>
             <item>
              <property name="text">
               <string>median</string>
              </property>
             </item>
             <item>
              <property name="text">
               <string>minimum</string>
              </property>
             </item>
            </widget>
           </item>
          </layout>
         </widget>
        </item>
        <item row="2" column="0" colspan="5">
         <widget class="QSplitter" name="splitter_3">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>0</width>
            <height>30</height>
           </size>
          </property>
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <widget class="QPushButton" name="pushButton_showModelSumm_pop">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Minimum" vsizetype="Minimum">
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="maximumSize">
            <size>
             <width>16777215</width>
             <height>16777215</height>
            </size>
           </property>
           <property name="text">
            <string>Show model summary</string>
           </property>
          </widget>
          <widget class="QPushButton" name="pushButton_saveModelSumm_pop">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Minimum" vsizetype="Minimum">
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="maximumSize">
            <size>
             <width>16777215</width>
             <height>16777215</height>
            </size>
           </property>
           <property name="text">
            <string>Save model summary</string>
           </property>
          </widget>
         </widget>
        </item>
        <item row="1" column="0" colspan="5">
         <widget class="QGroupBox" name="groupBox_system_pop">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="title">
           <string>Training</string>
          </property>
          <layout class="QGridLayout" name="gridLayout_19">
           <item row="0" column="2">
            <widget class="QSpinBox" name="spinBox_NrEpochs">
             <property name="toolTip">
              <string>Total number of training iterations</string>
             </property>
             <property name="minimum">
              <number>1</number>
             </property>
             <property name="maximum">
              <number>999999999</number>
             </property>
            </widget>
           </item>
           <item row="0" column="3">
            <widget class="QLabel" name="label_saveMetaEvery">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Maximum" vsizetype="Preferred">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="text">
              <string>Save meta every (sec)</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
             </property>
            </widget>
           </item>
           <item row="0" column="4">
            <widget class="QSpinBox" name="spinBox_saveMetaEvery">
             <property name="minimum">
              <number>1</number>
             </property>
             <property name="maximum">
              <number>999999</number>
             </property>
             <property name="value">
              <number>30</number>
             </property>
            </widget>
           </item>
           <item row="0" column="1">
            <widget class="QLabel" name="label_Crop_NrEpochs_pop">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Maximum" vsizetype="Preferred">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="toolTip">
              <string>Total number of training iterations</string>
             </property>
             <property name="text">
              <string>Nr. epochs</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
             </property>
            </widget>
           </item>
           <item row="0" column="0">
            <widget class="QLabel" name="label_icon_epochs">
             <property name="minimumSize">
              <size>
               <width>20</width>
               <height>20</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>20</width>
               <height>20</height>
              </size>
             </property>
             <property name="text">
              <string/>
             </property>
             <property name="pixmap">
              <pixmap resource="art.qrc">:/icon/icon/nr_epochs.png</pixmap>
             </property>
             <property name="scaledContents">
              <bool>true</bool>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
        </item>
        <item row="3" column="2">
         <spacer name="horizontalSpacer">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
       </layout>
      </widget>
     </widget>
    </widget>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>GraphicsLayoutWidget</class>
   <extends>QWidget</extends>
   <header>pyqtgraph</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources>
  <include location="art.qrc"/>
 </resources>
 <connections/>
</ui>
